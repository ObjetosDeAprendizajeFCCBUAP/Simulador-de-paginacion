{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/InfoPanel/InfoPanel.vue?1057","webpack:///./src/views/Clock.vue?8880","webpack:///./src/components/Settings/Settings.vue?b53b","webpack:///./src/components/Table/Table.vue?6020","webpack:///./src/views/Fifo.vue?4b00","webpack:///./src/components/InputText/InputText.vue?c28f","webpack:///./src/components/HorizontalTable/HorizontalTable.vue?303e","webpack:///./src/App.vue?c14a","webpack:///./src/components/ProcessCard/ProcessCard.vue?e5ed","webpack:///./src/components/Modal/Modal.vue?143f","webpack:///./src/components/Radio/Radio.vue?73c6","webpack:///./src/views/Test.vue?9516","webpack:///./src/components/InputNumber/InputNumber.vue?dff7","webpack:///./src/components/Button/Button.vue?43be","webpack:///./src/views/Home.vue?611a","webpack:///./src/views/Form.vue?df9b","webpack:///./src/components/CircleTable/CircleTable.vue?6457","webpack:///./src/App.vue","webpack:///./src/store/index.ts","webpack:///./src/App.vue?1d14","webpack:///./src/App.vue?97f5","webpack:///./src/views/Form.vue","webpack:///./src/components/Modal/Modal.vue","webpack:///./src/components/Icon/Icon.vue","webpack:///./src/components/Icon/icons.ts","webpack:///./src/components/Icon/Icon.vue?307e","webpack:///./src/components/Icon/Icon.vue?b776","webpack:///./src/components/Modal/Modal.vue?ea93","webpack:///./src/components/Modal/Modal.vue?0dfb","webpack:///./src/components/Button/Button.vue","webpack:///./src/components/Button/Button.vue?b054","webpack:///./src/components/Button/Button.vue?e208","webpack:///./src/components/Dropdown/Dropdown.vue","webpack:///./src/components/Dropdown/Dropdown.vue?68d5","webpack:///./src/components/Dropdown/Dropdown.vue?1a2b","webpack:///./src/components/InputNumber/InputNumber.vue","webpack:///./src/components/InputNumber/InputNumber.vue?a240","webpack:///./src/components/InputNumber/InputNumber.vue?2de1","webpack:///./src/components/InputText/InputText.vue","webpack:///./src/components/InputText/InputText.vue?8954","webpack:///./src/components/InputText/InputText.vue?bbb2","webpack:///./src/components/Radio/Radio.vue","webpack:///./src/components/Radio/Radio.vue?3d0a","webpack:///./src/components/Radio/Radio.vue?3e05","webpack:///./src/components/ProcessCard/ProcessCard.vue","webpack:///./src/components/ProcessCard/ProcessCard.vue?d509","webpack:///./src/components/ProcessCard/ProcessCard.vue?ff2e","webpack:///./src/views/Form.vue?addb","webpack:///./src/views/Form.vue?fb48","webpack:///./src/views/Fifo.vue","webpack:///./src/components/InfoPanel/InfoPanel.vue","webpack:///./src/components/InfoPanel/InfoPanel.vue?35da","webpack:///./src/components/InfoPanel/InfoPanel.vue?962b","webpack:///./src/components/Table/Table.vue","webpack:///./src/components/Table/Table.vue?e395","webpack:///./src/components/Table/Table.vue?843c","webpack:///./src/components/ConfirmModal/ConfirmModal.vue","webpack:///./src/components/ConfirmModal/ConfirmModal.vue?215b","webpack:///./src/components/ConfirmModal/ConfirmModal.vue?58a0","webpack:///./src/components/Settings/Settings.vue","webpack:///./src/components/Toggle/Toggle.vue","webpack:///./src/components/Toggle/Toggle.vue?b243","webpack:///./src/components/Toggle/Toggle.vue?4e4a","webpack:///./src/components/Settings/Settings.vue?52d2","webpack:///./src/components/Settings/Settings.vue?2733","webpack:///./src/model/fifo.ts","webpack:///./src/model/job_queue.ts","webpack:///./src/model/loader.ts","webpack:///./src/model/frame.ts","webpack:///./src/model/physical_memory.ts","webpack:///./src/model/process.ts","webpack:///./src/model/rr_scheduler.ts","webpack:///./src/model/page.ts","webpack:///./src/model/virtual_memory.ts","webpack:///./src/model/working_set.ts","webpack:///./src/model/wsclock.ts","webpack:///./src/model/cpu.ts","webpack:///./src/views/Fifo.vue?8044","webpack:///./src/views/Fifo.vue?2b4e","webpack:///./src/views/Test.vue","webpack:///./src/views/Test.vue?33db","webpack:///./src/views/Test.vue?7a80","webpack:///./src/views/Clock.vue","webpack:///./src/components/CircleTable/CircleTable.vue","webpack:///./src/components/CircleTable/CircleTable.vue?95fd","webpack:///./src/components/CircleTable/CircleTable.vue?6891","webpack:///./src/views/Clock.vue?b9ca","webpack:///./src/views/Clock.vue?c393","webpack:///./src/views/Home.vue","webpack:///./src/views/Home.vue?26af","webpack:///./src/views/Home.vue?c772","webpack:///./src/views/Set.vue","webpack:///./src/components/HorizontalTable/HorizontalTable.vue","webpack:///./src/components/HorizontalTable/HorizontalTable.vue?e70c","webpack:///./src/components/HorizontalTable/HorizontalTable.vue?bbda","webpack:///./src/views/Set.vue?3352","webpack:///./src/views/Set.vue?3c67","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./src/views/Set.vue?ac8c","webpack:///./src/components/Toggle/Toggle.vue?0bc5","webpack:///./src/components/Dropdown/Dropdown.vue?9214","webpack:///./src/components/ConfirmModal/ConfirmModal.vue?43fe"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","settings","getters","getTheme","style","computedStyles","darkMode","fontSize","themeColor","pages_per_process","quantum","methods","toggleTheme","setTheme","theme","setFontSize","font_size","setColor","color","setPagesPerProcess","pages","setQuantum","getFontSize","getColor","getPagesPerProcess","getQuantum","setup","localStorageSettings","localStorage","getItem","console","log","settingsObj","JSON","parse","table","setItem","stringify","render","showModal","to","icon","width","height","inputProcesses","process","pid","size","onClickFunction","openModal","round","expand","physical_size","type","min","max","step","virtual_size","view","opt1","opt2","disable","showing","closeModal","placeholder","iterable","pid_list","selected","selected_pid","mini","arrival_time","optionsList","refs_options","refs_opt","input_refs","addProcess","text","active","formValidation","aria-hidden","aria-label","close","iconStyle","preserveAspectRatio","xmlns","viewBox","fill","path","ICONS","props","String","requierd","default","required","Number","components","Icon","Boolean","_","emit","disabled","Function","toggleMenu","showOption","show_menu","item","index","updateOption","Array","selected_option","option","canDecrement","decrement","input_val","canIncrement","increment","start","valueHandler","valueOf","set","val","value_handler","id","selectedVal","for","sele","references","join","requiered","Modal","Button","Dropdown","InputNumber","InputText","Radio","ProcessCard","algorithm","filter","e","cad","replaceAll","split","map","x","trim","algo","parseInt","total_time","refs_arr","limite","Math","random","modal_open","settings_modal","current","completed","pageFaults","faults","title","listIterable","processQueue","message","physicalMemory","slots","physicalSize","oldest","virtualMemory","virtualSize","nextStep","openSettings","closeSettings","freeSlots","target","href","colorMap","code","searchColorName","toggle","normalColor","selectedColor","function","Toggle","dark_theme","temp","virtual","physical","this","oldest_frame","loadProcess","deleteProcess","page","fault","isFull","hasProcessPage","releaseFrame","loadPage","queue","PID","input","sortedProcesses","processInput","time","sort","a","b","forEach","frame_number","unit","referenced_bit","dirty","age","process_pid","process_page","ref","frames_number","frames","initFrames","free","frame","_age","reference","band","number_of_pages","createRandomReferences","computed_time","refs","reverse","element","pop","job_queue","current_process","choseProcess","registerProcess","page_number","page_size","free_p","initPages","process_pages","window_size","working_set","capacity","referenced","indexOf","refresh_rate","tau","refresh","interrupt","virtual_time","frameLocation","getFrame","looking","isReferenced","isDirty","dirt","update","getOldest","updateFrame","processes","loader","scheduler","mmu","computed_process","nextProcessToCompute","current_reference","total_processes","completed_processes","ended","error_message","nextToArrive","tick","nextReference","referenceProcess","hasFinished","hasFinishedTasks","hasComputed","hasInWait","InfoPanel","Table","ConfirmModal","Settings","inputArray","rquired","lista","cpu","undefined","next","getError","setTimeout","initCPU","__scopeId","iterableList","radius","computedSize","iterList","calcTranslate","offset","pointTo","_offset","calcDegrees","PI","calcCoords","xCoord","cos","yCoord","sin","toDeg","deg","computedStyle","transform","iter","limit","CircleTable","workingSet","fifo","ws","wsclock","changeTheme","HorizontalTable","routes","component","Home","Form","beforeEnter","f","params","Fifo","Set","Clock","Test","router","history","App","use","mount"],"mappings":"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","file":"js/app.a295b9df.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InfoPanel.vue?vue&type=style&index=0&id=e360b00e&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Clock.vue?vue&type=style&index=0&id=a33ae226&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Settings.vue?vue&type=style&index=0&id=4b112a52&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Table.vue?vue&type=style&index=0&id=18e1abd0&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Fifo.vue?vue&type=style&index=0&id=0db358d3&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InputText.vue?vue&type=style&index=0&id=5942ff15&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./HorizontalTable.vue?vue&type=style&index=0&id=37eb7a64&lang=scss\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=7594c166&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ProcessCard.vue?vue&type=style&index=0&id=313e1abe&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Modal.vue?vue&type=style&index=0&id=060cff15&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Radio.vue?vue&type=style&index=0&id=4e5784fe&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Test.vue?vue&type=style&index=0&id=3348ddef&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InputNumber.vue?vue&type=style&index=0&id=2fca56b2&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Button.vue?vue&type=style&index=0&id=457600e4&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Home.vue?vue&type=style&index=0&id=3b8e4bfa&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Form.vue?vue&type=style&index=0&id=f8ebedb8&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./CircleTable.vue?vue&type=style&index=0&id=1ad0f693&lang=scss\"","<template>\r\n  <div class=\"main\" \r\n    :class=\"{ dark: settings.getters.getTheme() }\"\r\n    :style=\"computedStyles\"\r\n  >\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, onMounted, provide } from \"vue\";\r\nimport settings from '@/store';\r\n\r\nexport default defineComponent({\r\n  setup(){\r\n    provide('settings', settings);\r\n\r\n    // const computedClasses = computed(() => {\r\n    //   const theme = settings.getters.getTheme();\r\n    //   // const font = settings.ge\r\n    //   const obj = new Object();\r\n    //   return  obj;\r\n    // });\r\n\r\n    onMounted(() => {\r\n      const localStorageSettings = localStorage.getItem('app-settings');\r\n      console.log('@', localStorageSettings);\r\n      if(localStorageSettings !== null){\r\n        const settingsObj = JSON.parse(localStorageSettings);\r\n        console.log('Si existe el objeto mano');\r\n        console.table(settingsObj);\r\n        settings.methods.setTheme(settingsObj.darkMode);\r\n        settings.methods.setFontSize(settingsObj.fontSize);\r\n        settings.methods.setColor(settingsObj.themeColor);\r\n        settings.methods.setPagesPerProcess(settingsObj.pages_per_process);\r\n        settings.methods.setQuantum(settingsObj.quantum);\r\n      } else {\r\n        console.log('Pues no esta tu crees?')\r\n        localStorage.setItem('app-settings', JSON.stringify(settings.settings));\r\n        console.log('pero ya lo guarde mano');\r\n      }\r\n\r\n    });\r\n\r\n    const computedStyles = computed(() => {\r\n      return {\r\n        'fontSize': `${settings.getters.getFontSize()}px`,\r\n      }\r\n    })\r\n    \r\n\r\n    return { \r\n      settings,\r\n      computedStyles,\r\n      // computedClasses,\r\n    }\r\n  }\r\n});\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './styles/app';\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n}\r\n\r\n#nav {\r\n  padding: 30px;\r\n\r\n  a {\r\n    font-weight: bold;\r\n    color: #2c3e50;\r\n\r\n    &.router-link-exact-active {\r\n      color: #42b983;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { reactive } from \"@vue/reactivity\";\r\n\r\nconst settings = reactive({\r\n\tdarkMode: false,\r\n\tfontSize: 20,\r\n\tthemeColor: '',\r\n\tpages_per_process: 10,\r\n\tquantum: 4,\r\n});\r\n\r\nconst methods = {\r\n\r\n\ttoggleTheme(): void {\r\n\t\tsettings.darkMode = !settings.darkMode;\r\n\t},\r\n\r\n\tsetTheme(theme: boolean): void { settings.darkMode = theme; },\r\n\tsetFontSize(font_size: number) : void { settings.fontSize = font_size; },\r\n\tsetColor(color: string): void { settings.themeColor = color; },\r\n\tsetPagesPerProcess(pages: number): void { settings.pages_per_process = pages },\r\n\tsetQuantum(quantum: number): void { settings.quantum = quantum }\r\n\r\n\r\n};\r\n\r\nconst getters = {\r\n\r\n\tgetTheme(): boolean { return settings.darkMode },\r\n\tgetFontSize(): number { return settings.fontSize },\r\n\tgetColor() : string { return settings.themeColor },\r\n\tgetPagesPerProcess() : number { return settings.pages_per_process; },\r\n\tgetQuantum(): number { return settings.quantum },\r\n}\r\n\r\nexport default {\r\n\tsettings,\r\n\tmethods,\r\n\tgetters\r\n}","\r\nimport { computed, defineComponent, onMounted, provide } from \"vue\";\r\nimport settings from '@/store';\r\n\r\nexport default defineComponent({\r\n  setup(){\r\n    provide('settings', settings);\r\n\r\n    // const computedClasses = computed(() => {\r\n    //   const theme = settings.getters.getTheme();\r\n    //   // const font = settings.ge\r\n    //   const obj = new Object();\r\n    //   return  obj;\r\n    // });\r\n\r\n    onMounted(() => {\r\n      const localStorageSettings = localStorage.getItem('app-settings');\r\n      console.log('@', localStorageSettings);\r\n      if(localStorageSettings !== null){\r\n        const settingsObj = JSON.parse(localStorageSettings);\r\n        console.log('Si existe el objeto mano');\r\n        console.table(settingsObj);\r\n        settings.methods.setTheme(settingsObj.darkMode);\r\n        settings.methods.setFontSize(settingsObj.fontSize);\r\n        settings.methods.setColor(settingsObj.themeColor);\r\n        settings.methods.setPagesPerProcess(settingsObj.pages_per_process);\r\n        settings.methods.setQuantum(settingsObj.quantum);\r\n      } else {\r\n        console.log('Pues no esta tu crees?')\r\n        localStorage.setItem('app-settings', JSON.stringify(settings.settings));\r\n        console.log('pero ya lo guarde mano');\r\n      }\r\n\r\n    });\r\n\r\n    const computedStyles = computed(() => {\r\n      return {\r\n        'fontSize': `${settings.getters.getFontSize()}px`,\r\n      }\r\n    })\r\n    \r\n\r\n    return { \r\n      settings,\r\n      computedStyles,\r\n      // computedClasses,\r\n    }\r\n  }\r\n});\r\n\r\n","import { render } from \"./App.vue?vue&type=template&id=7594c166\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=7594c166&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"form-fifo\">\r\n\t\t<div class=\"blur-content\" :class=\"{ blur : showModal}\">\r\n            <div class=\"back\">\r\n                <router-link to=\"/\" class=\"btn expand round back-home\">\r\n                    <Icon \r\n                        :icon=\"'back'\"\r\n                        :width=\"settings.getters.getFontSize() * 1.2\"\r\n                        :height=\"settings.getters.getFontSize() * 1.2\"\r\n                        :color=\"settings.getters.getColor()\"\r\n                    />\r\n                </router-link>\r\n            </div>\r\n            <div class=\"process-section\">\r\n                <div class=\"section-title\" :style=\"{ color: settings.getters.getColor() }\">Procesos de entrada</div>\r\n                <div class=\"processes-list\" v-if=\"inputProcesses.length > 0\">\r\n                    <ProcessCard v-for=\"process in inputProcesses\" class=\"process-item\"\r\n                        :key=\"process.pid\"\r\n                        :process=\"process\"\r\n                    />\r\n                </div>\r\n                <div class=\"processes-list\" v-else>\r\n                    Sin procesos de entrada\r\n                </div>\r\n                <Button\r\n                    :icon=\"'plus'\"\r\n                    :size=\"settings.getters.getFontSize() * 1.2\"\r\n                    :onClickFunction=\"openModal\"\r\n                    :round=\"true\"\r\n                    :expand=\"true\"\r\n                    :color=\"settings.getters.getColor()\"\r\n                />\r\n            </div>\r\n            <div class=\"options-section\">\r\n                <div class=\"section-title\" :style=\"{ color: settings.getters.getColor() }\">Opciones</div>\r\n                <div class=\"options\">\r\n                    <div class=\"opt\">\r\n                        <p># de marcos: <span :style=\"{ color: settings.getters.getColor() }\">{{physical_size}}</span></p>\r\n                        <input type=\"range\"\r\n                            class=\"range-input\"\r\n                            min=\"3\"\r\n                            max=\"8\"\r\n                            step=\"1\"\r\n                            v-model.number=\"physical_size\"\r\n                        >\r\n                    </div>\r\n                    <div class=\"opt\">\r\n                        <p># de paginas: <span :style=\"{ color: settings.getters.getColor() }\">{{virtual_size}}</span></p>\r\n                        <input type=\"range\"\r\n                            class=\"range-input\"\r\n                            min=\"3\"\r\n                            max=\"16\"\r\n                            step=\"1\"\r\n                            v-model.number=\"virtual_size\"\r\n                        >\r\n                    </div>\r\n                    <div class=\"opt\" v-if=\"view == 'Set'\">\r\n                        <p>Conjunto de trabajo: <span :style=\"{ color: settings.getters.getColor() }\">{{opt1}}</span></p>\r\n                        <input type=\"range\"\r\n                            class=\"range-input\"\r\n                            min=\"2\"\r\n                            :max=\"physical_size - 2\"\r\n                            step=\"1\"\r\n                            v-model.number=\"opt1\"\r\n                        >\r\n                    </div>\r\n                    <div class=\"opt\" v-if=\"view == 'Clock'\">\r\n                        <p>Tasa de refresco: <span :style=\"{ color: settings.getters.getColor() }\">{{opt1}}</span></p>\r\n                        <input type=\"range\"\r\n                            class=\"range-input\"\r\n                            min=\"2\"\r\n                            max=\"5\"\r\n                            step=\"1\"\r\n                            v-model.number=\"opt1\"\r\n                        >\r\n                    </div>\r\n                    <div class=\"opt\" v-if=\"view == 'Clock'\">\r\n                        <p>T: <span :style=\"{ color: settings.getters.getColor() }\">{{opt2}}</span></p>\r\n                        <input type=\"range\"\r\n                            class=\"range-input\"\r\n                            min=\"2\"\r\n                            max=\"5\"\r\n                            step=\"1\"\r\n                            v-model.number=\"opt2\"\r\n                        >\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <p v-if=\"inputProcesses.length <= 0\">Se require al menos un proceso para iniciar</p>\r\n            <router-link v-else\r\n                :disable=\"true\"\r\n                class=\"btn start-section\" :to=\"{\r\n                        name: view,\r\n                        params: { \r\n                            inputArray : JSON.stringify(inputProcesses), \r\n                            virtualSize: virtual_size, \r\n                            physicalSize: physical_size,\r\n                            algorithm: view,\r\n                            opt1: opt1,\r\n                            opt2: opt2,\r\n                        }\r\n                    }\" :style=\"{ color: settings.getters.getColor() }\">Iniciar</router-link>\r\n        </div>\r\n        <Modal :showing=\"showModal\" \r\n            @update:showing=\"showModal\"\r\n            @close=\"closeModal()\"\r\n        >\r\n            <div class=\"process-form\">\r\n                <Dropdown \r\n                    :placeholder=\"'PID'\"\r\n                    :iterable=\"pid_list\"\r\n                    :selected=\"selected_pid\"\r\n                    v-model=\"selected_pid\"\r\n                />\r\n                <span>Tiempo de arribo</span>\r\n                <InputNumber\r\n                    :max=\"20\"\r\n                    :mini=\"'0'\"\r\n                    :value=\"arrival_time\"\r\n                    v-model.number=\"arrival_time\"\r\n                />\r\n                <span>Número de páginas</span>\r\n                <InputNumber\r\n                    :max=\"settings.getters.getPagesPerProcess()\"\r\n                    :mini=\"1\"\r\n                    :value=\"pages\"\r\n                    v-model.number=\"pages\"\r\n                />\r\n                <span>Referencias a páginas</span>\r\n                <Radio \r\n                    :optionsList=\"refs_options\"\r\n                    :value=\"refs_opt\"\r\n                    v-model=\"refs_opt\"\r\n                />\r\n                <span v-if=\"refs_opt === 'Manual'\">Ingrese las referencias a página separadas por una coma (,)</span>\r\n                <span v-else-if=\"refs_opt === 'Aleatorio'\">Ingrese el numero total de referencias a realizar</span>\r\n                <span v-else>Seleccione el modo de captura de referencias</span>\r\n                <InputText \r\n                    :placeholder=\"'Ingrese las referencias'\"\r\n                    :value=\"input_refs\"\r\n                    v-model=\"input_refs\"\r\n                />\r\n                <Button \r\n                    :onClickFunction=\"addProcess\"\r\n                    :text=\"'Agregar'\"\r\n                    :size=\"16\"\r\n                    :icon=\"'plus'\"\r\n                    :expand=\"false\"\r\n                    :active=\"formValidation\"\r\n                    :color=\"settings.getters.getColor()\"\r\n                />\r\n            </div>   \r\n        </Modal>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, inject, onMounted, ref } from 'vue'\r\nimport Modal from '@/components/Modal/Modal.vue';\r\nimport Button from '@/components/Button/Button.vue';\r\nimport Dropdown from '@/components/Dropdown/Dropdown.vue';\r\nimport InputNumber from '@/components/InputNumber/InputNumber.vue';\r\nimport InputText from '@/components/InputText/InputText.vue';\r\nimport Radio from '@/components/Radio/Radio.vue';\r\nimport ProcessCard from '@/components/ProcessCard/ProcessCard.vue';\r\nimport Icon from '@/components/Icon/Icon.vue';\r\nimport { IProcessInput } from '@/model/loader';\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        Modal,\r\n        Button,\r\n        Dropdown,\r\n        InputNumber,\r\n        InputText,\r\n        Radio,\r\n\t\tProcessCard,\r\n        Icon,\r\n    },\r\n    props: {\r\n        algorithm: {\r\n            type: String,\r\n            required: true,\r\n        }\r\n    },\r\n    setup(props) {\r\n\r\n        const settings = inject('settings');\r\n        const showModal = ref(false);\r\n\r\n        const openModal = () => {\r\n            showModal.value = true;\r\n        }\r\n\r\n        const closeModal = () => {\r\n            showModal.value = false;\r\n            console.log('SE cerro jejeje');\r\n        }\r\n\r\n        const pid_list = ref(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']);\r\n        const selected_pid = ref('');\r\n        const arrival_time = ref(0);\r\n        const pages = ref(1);\r\n        const refs_options = ['Manual', 'Aleatorio'];\r\n        const refs_opt = ref('');\r\n        const input_refs = ref('');\r\n        const inputProcesses = ref<IProcessInput []>([]);\r\n\r\n\t\tconst physical_size = ref(4);\r\n\t\tconst virtual_size = ref(6);\r\n\r\n        const opt1 = ref(3);\r\n        const opt2 = ref(3);\r\n\r\n        function addProcess() {\r\n            pid_list.value = pid_list.value.filter((e) => e !== selected_pid.value);\r\n            if (refs_opt.value === 'Manual') {\r\n                let cad: string[] = input_refs.value.replaceAll(' ', '').split(',');\r\n                cad = cad.map((x) => x.trim());\r\n                const algo = cad.map((x) => parseInt(x, 10));\r\n                inputProcesses.value.push({\r\n                    pid: selected_pid.value,\r\n                    arrival_time: arrival_time.value,\r\n                    pages: pages.value,\r\n                    total_time: input_refs.value.length,\r\n                    references: algo,\r\n                });\r\n            } else {\r\n                const refs_arr: number[] = [];\r\n                const limite = parseInt(input_refs.value, 10);\r\n                console.log(input_refs.value);\r\n                for (let i = 0; i < limite; i += 1) \r\n                    refs_arr.push(Math.round(Math.random() * (pages.value - 1)));\r\n                inputProcesses.value.push({\r\n                    pid: selected_pid.value,\r\n                    arrival_time: arrival_time.value,\r\n                    pages: pages.value,\r\n                    total_time: refs_arr.length,\r\n                    references: refs_arr,\r\n                });\r\n            }\r\n\t\tconsole.log(inputProcesses.value);\r\n            selected_pid.value = '';\r\n            arrival_time.value = 0;\r\n            pages.value = 1;\r\n            refs_opt.value = '';\r\n            input_refs.value = '';\r\n            console.log(inputProcesses.value);\r\n\t\t\tcloseModal();\r\n        }\r\n\r\n        const view = ref('');\r\n        onMounted(() => {\r\n            switch(props.algorithm){\r\n                case 'fifo':\r\n                    view.value = 'Fifo'\r\n                    break;\r\n                case 'ws':\r\n                    view.value = 'Set'\r\n                    break;\r\n                case 'wsclock':\r\n                    view.value = 'Clock'\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n\r\n        const formValidation = computed(() => {\r\n            \r\n            if(selected_pid.value.length <= 0 || input_refs.value.length <= 0){ \r\n                console.log('JolissjsjsA');\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        return {\r\n            showModal,\r\n            openModal,\r\n            closeModal,\r\n            settings,\r\n\r\n            pid_list,\r\n            selected_pid,\r\n            arrival_time,\r\n            pages,\r\n            refs_options,\r\n            refs_opt,\r\n            input_refs,\r\n            inputProcesses,\r\n            addProcess,\r\n\r\n\t\t\tphysical_size,\r\n\t\t\tvirtual_size,\r\n            opt1,\r\n            opt2,\r\n\r\n            view,\r\n            formValidation, \r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './formfifo';\r\n@import './views';\r\n</style>","<template>\r\n\t<div>\r\n\t\t<!-- <transition\r\n\t\t\tenter-active-class=\"transition ease-out duration-300\"\r\n\t\t\tenter-from-class=\"opacity-0\"\r\n\t\t\tenter-to-class=\"opacity-100\"\r\n\t\t\tleave-active-class=\"transition ease-in duration-200\"\r\n\t\t\tleave-from-class=\"opacity-100\"\r\n\t\t\tleave-to-class=\"opacity-0\"\r\n\t\t> -->\r\n\t\t<div v-show=\"showing\" class=\"modal\">\r\n\t\t\t<div class=\"modal__container\">\r\n\t\t\t\t<div class=\"modal__header\" aria-hidden=\"true\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclass=\"btn expand round btn-close\"\r\n\t\t\t\t\t\taria-label=\"close\"\r\n\t\t\t\t\t\t@click.prevent=\"close\"\r\n\t\t\t\t\t\t:style=\"{ color: settings.getters.getColor() }\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t:icon=\"'close'\"\r\n\t\t\t\t\t\t:height=\"settings.getters.getFontSize()\"\r\n\t\t\t\t\t\t:width=\"settings.getters.getFontSize()\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"modal__content\">\r\n\t\t\t\t\t<slot></slot>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<!-- </transition> -->\r\n\r\n\t</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, inject } from 'vue';\r\nimport Icon from '@/components/Icon/Icon.vue';\r\n\r\nexport default defineComponent({\r\n\tcomponents: {\r\n\t\tIcon,\r\n\t},\r\n\tprops: {\r\n\t\tshowing: {\r\n\t\t\ttype: Boolean,\r\n\t\t\trequired: true,\r\n\t\t\tdefault: false,\r\n\t\t}\r\n\t},\r\n\tsetup(_, { emit }) {\r\n\r\n\t\tconst settings = inject('settings');\r\n\r\n\t\tconst close = () => {\r\n\t\t\tconsole.log('Modal closed');\r\n\t\t\temit('update:showing', false);\r\n\t\t\temit('close');\r\n\t\t\tconsole.log('Que pasa')\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tsettings,\r\n\t\t\tclose\r\n\t\t}\r\n\t}\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './modal';\r\n</style>","<template>\r\n    <div :style=\"iconStyle\">\r\n        <svg\r\n            :width=\"`${width}px`\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n        >\r\n            <g>\r\n                <path :fill=\"color\" :d=\"path\" />\r\n            </g>\r\n        </svg>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n/* @ts-ignore */\r\nimport { computed, defineComponent } from 'vue';\r\nimport ICONS from './icons';\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        icon: {\r\n            type: String as () => string,\r\n            requierd: true,\r\n            default: () => 'code',\r\n        },\r\n        color: {\r\n            type: String,\r\n            required: false,\r\n            default: 'currentColor',\r\n        },\r\n        width: {\r\n            type: Number, String,\r\n            required: false,\r\n            default: 16,\r\n        },\r\n        height: {\r\n            type: Number, String,\r\n            required: false,\r\n            default: 16,\r\n        }\r\n    },\r\n    setup(props) {\r\n        const iconStyle = computed(() => {\r\n            return props.width && props.height ? {\r\n                width: `${ props.width }px`,\r\n                height: `${ props.height }px`,\r\n            } : '';\r\n        });\r\n\r\n        const path = computed((): string => {\r\n            // @ts-ignore\r\n            return ICONS[props.icon];\r\n        })\r\n        return {\r\n            iconStyle,\r\n            path\r\n        }\r\n    }\r\n});\r\n</script>\r\n\r\n<style >\r\n\r\n</style>","type dict = { [index: string]: string};\r\n\r\nconst ICONS: dict = {\r\n    'code': \"M14.6,16.6L19.2,12L14.6,7.4L16,6L22,12L16,18L14.6,16.6M9.4,16.6L4.8,12L9.4,7.4L8,6L2,12L8,18L9.4,16.6Z\",\r\n    'delete': \"M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8,9H16V19H8V9M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z\",\r\n    'clocktimeline': \"M4 2V8H2V2H4M2 22V16H4V22H2M5 12C5 13.11 4.11 14 3 14C1.9 14 1 13.11 1 12C1 10.9 1.9 10 3 10C4.11 10 5 10.9 5 12M16 4C20.42 4 24 7.58 24 12C24 16.42 20.42 20 16 20C12.4 20 9.36 17.62 8.35 14.35L6 12L8.35 9.65C9.36 6.38 12.4 4 16 4M16 6C12.69 6 10 8.69 10 12C10 15.31 12.69 18 16 18C19.31 18 22 15.31 22 12C22 8.69 19.31 6 16 6M15 13V8H16.5V12.2L19.5 14L18.68 15.26L15 13Z\",\r\n    'plus': \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\",\r\n    'list': \"M7,5H21V7H7V5M7,13V11H21V13H7M4,4.5A1.5,1.5 0 0,1 5.5,6A1.5,1.5 0 0,1 4,7.5A1.5,1.5 0 0,1 2.5,6A1.5,1.5 0 0,1 4,4.5M4,10.5A1.5,1.5 0 0,1 5.5,12A1.5,1.5 0 0,1 4,13.5A1.5,1.5 0 0,1 2.5,12A1.5,1.5 0 0,1 4,10.5M7,19V17H21V19H7M4,16.5A1.5,1.5 0 0,1 5.5,18A1.5,1.5 0 0,1 4,19.5A1.5,1.5 0 0,1 2.5,18A1.5,1.5 0 0,1 4,16.5Z\",\r\n    'settings' : 'M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z',\r\n    'screen': 'M21,16H3V4H21M21,2H3C1.89,2 1,2.89 1,4V16A2,2 0 0,0 3,18H10V20H8V22H16V20H14V18H21A2,2 0 0,0 23,16V4C23,2.89 22.1,2 21,2Z',\r\n    'next': 'M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z',\r\n    'play': 'M8,5.14V19.14L19,12.14L8,5.14Z',\r\n    'prev': 'M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z',\r\n    'leave': 'M19,3H5C3.89,3 3,3.89 3,5V9H5V5H19V19H5V15H3V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M10.08,15.58L11.5,17L16.5,12L11.5,7L10.08,8.41L12.67,11H3V13H12.67L10.08,15.58Z',\r\n    'back': 'M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z',\r\n    'close': 'M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z',\r\n    'arrive': 'M9.49984 0.666748C10.9143 0.666748 12.2709 1.22865 13.2711 2.22885C14.2713 3.22904 14.8332 4.58559 14.8332 6.00008C14.8332 7.41457 14.2713 8.77112 13.2711 9.77132C12.2709 10.7715 10.9143 11.3334 9.49984 11.3334C8.08535 11.3334 6.72879 10.7715 5.7286 9.77132C4.72841 8.77112 4.1665 7.41457 4.1665 6.00008C4.1665 4.58559 4.72841 3.22904 5.7286 2.22885C6.72879 1.22865 8.08535 0.666748 9.49984 0.666748V0.666748ZM9.49984 2.00008C8.43897 2.00008 7.42156 2.42151 6.67141 3.17165C5.92126 3.9218 5.49984 4.93922 5.49984 6.00008C5.49984 7.06095 5.92126 8.07836 6.67141 8.82851C7.42156 9.57865 8.43897 10.0001 9.49984 10.0001C10.5607 10.0001 11.5781 9.57865 12.3283 8.82851C13.0784 8.07836 13.4998 7.06095 13.4998 6.00008C13.4998 4.93922 13.0784 3.9218 12.3283 3.17165C11.5781 2.42151 10.5607 2.00008 9.49984 2.00008ZM8.83317 3.33341H9.83317V5.85341L11.3865 7.40675L10.6798 8.11341L8.83317 6.26675V3.33341ZM0.833171 10.0001C0.65636 10.0001 0.48679 9.92984 0.361766 9.80482C0.236742 9.67979 0.166504 9.51023 0.166504 9.33341C0.166504 9.1566 0.236742 8.98703 0.361766 8.86201C0.48679 8.73698 0.65636 8.66675 0.833171 8.66675H3.3865C3.59317 9.14008 3.85984 9.58675 4.1665 10.0001H0.833171ZM1.49984 6.66675C1.32303 6.66675 1.15346 6.59651 1.02843 6.47149C0.903408 6.34646 0.833171 6.17689 0.833171 6.00008C0.833171 5.82327 0.903408 5.6537 1.02843 5.52868C1.15346 5.40365 1.32303 5.33341 1.49984 5.33341H2.8665L2.83317 6.00008L2.8665 6.66675H1.49984ZM2.1665 3.33341C1.98969 3.33341 1.82012 3.26318 1.6951 3.13815C1.57008 3.01313 1.49984 2.84356 1.49984 2.66675C1.49984 2.48994 1.57008 2.32037 1.6951 2.19534C1.82012 2.07032 1.98969 2.00008 2.1665 2.00008H4.1665C3.85984 2.41341 3.59317 2.86008 3.3865 3.33341H2.1665Z',\r\n    'ram': 'M17,17H7V7H17M21,11V9H19V7C19,5.89 18.1,5 17,5H15V3H13V5H11V3H9V5H7C5.89,5 5,5.89 5,7V9H3V11H5V13H3V15H5V17A2,2 0 0,0 7,19H9V21H11V19H13V21H15V19H17A2,2 0 0,0 19,17V15H21V13H19V11M13,13H11V11H13M15,9H9V15H15V9Z',\r\n    'cpu': 'M6,4H18V5H21V7H18V9H21V11H18V13H21V15H18V17H21V19H18V20H6V19H3V17H6V15H3V13H6V11H3V9H6V7H3V5H6V4M11,15V18H12V15H11M13,15V18H14V15H13M15,15V18H16V15H15Z',\r\n    'hdd': 'M6,2H18A2,2 0 0,1 20,4V20A2,2 0 0,1 18,22H6A2,2 0 0,1 4,20V4A2,2 0 0,1 6,2M12,4A6,6 0 0,0 6,10C6,13.31 8.69,16 12.1,16L11.22,13.77C10.95,13.29 11.11,12.68 11.59,12.4L12.45,11.9C12.93,11.63 13.54,11.79 13.82,12.27L15.74,14.69C17.12,13.59 18,11.9 18,10A6,6 0 0,0 12,4M12,9A1,1 0 0,1 13,10A1,1 0 0,1 12,11A1,1 0 0,1 11,10A1,1 0 0,1 12,9M7,18A1,1 0 0,0 6,19A1,1 0 0,0 7,20A1,1 0 0,0 8,19A1,1 0 0,0 7,18M12.09,13.27L14.58,19.58L17.17,18.08L12.95,12.77L12.09,13.27Z',\r\n    'w-set': 'M20,6C20.58,6 21.05,6.2 21.42,6.59C21.8,7 22,7.45 22,8V19C22,19.55 21.8,20 21.42,20.41C21.05,20.8 20.58,21 20,21H4C3.42,21 2.95,20.8 2.58,20.41C2.2,20 2,19.55 2,19V8C2,7.45 2.2,7 2.58,6.59C2.95,6.2 3.42,6 4,6H8V4C8,3.42 8.2,2.95 8.58,2.58C8.95,2.2 9.42,2 10,2H14C14.58,2 15.05,2.2 15.42,2.58C15.8,2.95 16,3.42 16,4V6H20M4,8V19H20V8H4M14,6V4H10V6H14Z',\r\n    'clock': 'M12 20C16.4 20 20 16.4 20 12S16.4 4 12 4 4 7.6 4 12 7.6 20 12 20M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22C6.5 22 2 17.5 2 12C2 6.5 6.5 2 12 2M17 11.5V13H11V7H12.5V11.5H17Z',\r\n    'fifo': 'M16,4.5V7H5V9H16V11.5L19.5,8M16,12.5V15H5V17H16V19.5L19.5,16',\r\n    'monitor': 'M21,16H3V4H21M21,2H3C1.89,2 1,2.89 1,4V16A2,2 0 0,0 3,18H10V20H8V22H16V20H14V18H21A2,2 0 0,0 23,16V4C23,2.89 22.1,2 21,2Z',\r\n    'github': 'M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z',\r\n    \r\n}\r\n\r\nexport default ICONS;","\r\n/* @ts-ignore */\r\nimport { computed, defineComponent } from 'vue';\r\nimport ICONS from './icons';\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        icon: {\r\n            type: String as () => string,\r\n            requierd: true,\r\n            default: () => 'code',\r\n        },\r\n        color: {\r\n            type: String,\r\n            required: false,\r\n            default: 'currentColor',\r\n        },\r\n        width: {\r\n            type: Number, String,\r\n            required: false,\r\n            default: 16,\r\n        },\r\n        height: {\r\n            type: Number, String,\r\n            required: false,\r\n            default: 16,\r\n        }\r\n    },\r\n    setup(props) {\r\n        const iconStyle = computed(() => {\r\n            return props.width && props.height ? {\r\n                width: `${ props.width }px`,\r\n                height: `${ props.height }px`,\r\n            } : '';\r\n        });\r\n\r\n        const path = computed((): string => {\r\n            // @ts-ignore\r\n            return ICONS[props.icon];\r\n        })\r\n        return {\r\n            iconStyle,\r\n            path\r\n        }\r\n    }\r\n});\r\n","import { render } from \"./Icon.vue?vue&type=template&id=2005ec80\"\nimport script from \"./Icon.vue?vue&type=script&lang=ts\"\nexport * from \"./Icon.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { defineComponent, inject } from 'vue';\r\nimport Icon from '@/components/Icon/Icon.vue';\r\n\r\nexport default defineComponent({\r\n\tcomponents: {\r\n\t\tIcon,\r\n\t},\r\n\tprops: {\r\n\t\tshowing: {\r\n\t\t\ttype: Boolean,\r\n\t\t\trequired: true,\r\n\t\t\tdefault: false,\r\n\t\t}\r\n\t},\r\n\tsetup(_, { emit }) {\r\n\r\n\t\tconst settings = inject('settings');\r\n\r\n\t\tconst close = () => {\r\n\t\t\tconsole.log('Modal closed');\r\n\t\t\temit('update:showing', false);\r\n\t\t\temit('close');\r\n\t\t\tconsole.log('Que pasa')\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tsettings,\r\n\t\t\tclose\r\n\t\t}\r\n\t}\r\n})\r\n","import { render } from \"./Modal.vue?vue&type=template&id=060cff15\"\nimport script from \"./Modal.vue?vue&type=script&lang=ts\"\nexport * from \"./Modal.vue?vue&type=script&lang=ts\"\n\nimport \"./Modal.vue?vue&type=style&index=0&id=060cff15&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n    <button class=\"btn\" :class=\"{ 'expand' : expand, 'round': round}\"\r\n        :style=\"style\"\r\n        @click=\"onClickFunction\"\r\n        :disabled=\"active\"\r\n    >\r\n        <Icon v-if=\"icon\" class=\"btn-icon\"\r\n            :icon=\"icon\"\r\n            :color=\"color\"\r\n            :width=\"size\"\r\n            :height=\"size\"\r\n        />\r\n        <span class=\"btn-text\">{{ text }}</span>\r\n    </button>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent } from 'vue'\r\nimport Icon from '@/components/Icon/Icon.vue';\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        Icon,\r\n    },\r\n    props: {\r\n        text: {\r\n            type: String,\r\n            required: false,\r\n        },\r\n        icon: {\r\n            type: String,\r\n            required: false,\r\n\r\n        },\r\n        color: {\r\n            type: String,\r\n            required: false,\r\n            default: 'currentColor'\r\n        },\r\n        size: {\r\n            type: Number,\r\n            required: false,\r\n            default: 16,\r\n        },\r\n        expand: {\r\n            type: Boolean,\r\n            required: false,\r\n            default: false,\r\n        },\r\n        round: {\r\n            type: Boolean,\r\n            required: false,\r\n            default: false,\r\n        },\r\n        onClickFunction: {\r\n            type: Function,\r\n            required: true,\r\n        },\r\n        active: {\r\n            type: Boolean,\r\n            required: false,\r\n            default: false\r\n        }\r\n    },\r\n    setup(props) {\r\n        const style = computed(() => {\r\n            return {\r\n                //@ts-ignore\r\n                width: (props.expand) ? `${ props.size * 2}px` : 'auto',\r\n                //@ts-ignore\r\n                height: (props.expand) ? `${ props.size * 2}px` : 'auto',\r\n                fontSize: `${ props.size}px`,\r\n                color: props.color,\r\n            }\r\n        });\r\n        return {\r\n            style,\r\n        }\r\n    }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '_button.scss';\r\n</style>\r\n","\r\nimport { computed, defineComponent } from 'vue'\r\nimport Icon from '@/components/Icon/Icon.vue';\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        Icon,\r\n    },\r\n    props: {\r\n        text: {\r\n            type: String,\r\n            required: false,\r\n        },\r\n        icon: {\r\n            type: String,\r\n            required: false,\r\n\r\n        },\r\n        color: {\r\n            type: String,\r\n            required: false,\r\n            default: 'currentColor'\r\n        },\r\n        size: {\r\n            type: Number,\r\n            required: false,\r\n            default: 16,\r\n        },\r\n        expand: {\r\n            type: Boolean,\r\n            required: false,\r\n            default: false,\r\n        },\r\n        round: {\r\n            type: Boolean,\r\n            required: false,\r\n            default: false,\r\n        },\r\n        onClickFunction: {\r\n            type: Function,\r\n            required: true,\r\n        },\r\n        active: {\r\n            type: Boolean,\r\n            required: false,\r\n            default: false\r\n        }\r\n    },\r\n    setup(props) {\r\n        const style = computed(() => {\r\n            return {\r\n                //@ts-ignore\r\n                width: (props.expand) ? `${ props.size * 2}px` : 'auto',\r\n                //@ts-ignore\r\n                height: (props.expand) ? `${ props.size * 2}px` : 'auto',\r\n                fontSize: `${ props.size}px`,\r\n                color: props.color,\r\n            }\r\n        });\r\n        return {\r\n            style,\r\n        }\r\n    }\r\n});\r\n","import { render } from \"./Button.vue?vue&type=template&id=457600e4\"\nimport script from \"./Button.vue?vue&type=script&lang=ts\"\nexport * from \"./Button.vue?vue&type=script&lang=ts\"\n\nimport \"./Button.vue?vue&type=style&index=0&id=457600e4&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"title\" @click=\"toggleMenu\" :style=\"{ color: settings.getters.getColor() }\">\r\n      <div class=\"selected-option\">\r\n        {{showOption}}\r\n      </div>\r\n      <svg :class=\"{ opened : show_menu }\" viewBox=\"0 0 320 512\" width=\"16\">\r\n          <path fill=\"currentColor\" d=\"M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8\r\n          7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z\"></path>\r\n      </svg>\r\n    </div>\r\n    <div class=\"sub-menu\" v-if=\"show_menu\">\r\n      <div class=\"menu-item\"\r\n          v-for=\"(item, index) in iterable\"\r\n          :key=\"index\"\r\n          @click=\"updateOption(item)\"\r\n          :style=\"item === showOption ? `color: ${settings.getters.getColor()}`  : `color: inhered`\">\r\n        {{ item }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, inject, ref } from 'vue';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    iterable: {\r\n      type: Array as () => string[],\r\n      required: true,\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n    selected: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const settings = inject('settings');\r\n    const show_menu = ref(false);\r\n    const selected_option = ref('');\r\n\r\n    // @ts-ignore\r\n    const showOption = computed(() => (props.selected.length <= 0 ? props.placeholder\r\n      : selected_option.value));\r\n\r\n    function toggleMenu() {\r\n      show_menu.value = !show_menu.value;\r\n    }\r\n\r\n    function updateOption(option: string) {\r\n      selected_option.value = option;\r\n      show_menu.value = false;\r\n      emit('update:modelValue', option);\r\n    }\r\n\r\n    return {\r\n      show_menu,\r\n      toggleMenu,\r\n      updateOption,\r\n      showOption,\r\n      settings,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import 'dropdown'\r\n</style>\r\n","\r\nimport { computed, defineComponent, inject, ref } from 'vue';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    iterable: {\r\n      type: Array as () => string[],\r\n      required: true,\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n    selected: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const settings = inject('settings');\r\n    const show_menu = ref(false);\r\n    const selected_option = ref('');\r\n\r\n    // @ts-ignore\r\n    const showOption = computed(() => (props.selected.length <= 0 ? props.placeholder\r\n      : selected_option.value));\r\n\r\n    function toggleMenu() {\r\n      show_menu.value = !show_menu.value;\r\n    }\r\n\r\n    function updateOption(option: string) {\r\n      selected_option.value = option;\r\n      show_menu.value = false;\r\n      emit('update:modelValue', option);\r\n    }\r\n\r\n    return {\r\n      show_menu,\r\n      toggleMenu,\r\n      updateOption,\r\n      showOption,\r\n      settings,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./Dropdown.vue?vue&type=template&id=6593ecb7\"\nimport script from \"./Dropdown.vue?vue&type=script&lang=ts\"\nexport * from \"./Dropdown.vue?vue&type=script&lang=ts\"\n\nimport \"./Dropdown.vue?vue&type=style&index=0&id=6593ecb7&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n  <div class=\"input-num\">\r\n    <div class=\"decrement\" @click=\"decrement\" :class=\"{inactive: !canDecrement }\">-</div>\r\n    <input class=\"input-field\" type=\"text\" v-model.number=\"input_val\" :style=\"{ color: settings.getters.getColor() }\"/>\r\n    <div class=\"increment\" @click=\"increment\" :class=\"{inactive: !canIncrement}\">+</div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    mini : {\r\n      type: [Number, String],\r\n      required: false,\r\n    },\r\n    max : {\r\n      type: Number,\r\n      required: false,\r\n    },\r\n    start: {\r\n      type: Number,\r\n      required: false,\r\n    },\r\n    value: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  setup (props, { emit }) {\r\n    const settings  = inject('settings');\r\n\r\n    const valueHandler = {\r\n      get() {\r\n        return props.value.valueOf();\r\n      }, \r\n      set(val: number) {\r\n        emit('update:modelValue', val);\r\n      },\r\n    }\r\n    \r\n    // @ts-ignore\r\n    const input_val = computed(valueHandler);\r\n\r\n    const canIncrement = computed(() : boolean => {\r\n      if(props.max)\r\n        // @ts-ignore\r\n        return props.value.valueOf() + 1 <= props.max;\r\n      return true;\r\n    });\r\n\r\n    const canDecrement = computed(() : boolean => {\r\n      if(props.mini)\r\n        // @ts-ignore\r\n        return props.value.valueOf() - 1 >= props.mini;\r\n      return true;\r\n    });\r\n\r\n    const increment = () => { \r\n      if(canIncrement.value)\r\n      // @ts-ignore\r\n        emit('update:modelValue', props.value + 1);\r\n    }\r\n\r\n    const decrement = () => { \r\n      if(canDecrement.value)\r\n      // @ts-ignore\r\n        emit('update:modelValue', props.value - 1);\r\n    }\r\n\r\n    return {\r\n      settings,\r\n      input_val,\r\n      increment,\r\n      decrement,\r\n      canIncrement,\r\n      canDecrement,\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"./inputnumber\";\r\n</style>","\r\nimport { computed, defineComponent, inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    mini : {\r\n      type: [Number, String],\r\n      required: false,\r\n    },\r\n    max : {\r\n      type: Number,\r\n      required: false,\r\n    },\r\n    start: {\r\n      type: Number,\r\n      required: false,\r\n    },\r\n    value: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  setup (props, { emit }) {\r\n    const settings  = inject('settings');\r\n\r\n    const valueHandler = {\r\n      get() {\r\n        return props.value.valueOf();\r\n      }, \r\n      set(val: number) {\r\n        emit('update:modelValue', val);\r\n      },\r\n    }\r\n    \r\n    // @ts-ignore\r\n    const input_val = computed(valueHandler);\r\n\r\n    const canIncrement = computed(() : boolean => {\r\n      if(props.max)\r\n        // @ts-ignore\r\n        return props.value.valueOf() + 1 <= props.max;\r\n      return true;\r\n    });\r\n\r\n    const canDecrement = computed(() : boolean => {\r\n      if(props.mini)\r\n        // @ts-ignore\r\n        return props.value.valueOf() - 1 >= props.mini;\r\n      return true;\r\n    });\r\n\r\n    const increment = () => { \r\n      if(canIncrement.value)\r\n      // @ts-ignore\r\n        emit('update:modelValue', props.value + 1);\r\n    }\r\n\r\n    const decrement = () => { \r\n      if(canDecrement.value)\r\n      // @ts-ignore\r\n        emit('update:modelValue', props.value - 1);\r\n    }\r\n\r\n    return {\r\n      settings,\r\n      input_val,\r\n      increment,\r\n      decrement,\r\n      canIncrement,\r\n      canDecrement,\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./InputNumber.vue?vue&type=template&id=2fca56b2\"\nimport script from \"./InputNumber.vue?vue&type=script&lang=ts\"\nexport * from \"./InputNumber.vue?vue&type=script&lang=ts\"\n\nimport \"./InputNumber.vue?vue&type=style&index=0&id=2fca56b2&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n  <div class=\"input-wrapper\">\r\n    <input\r\n      type=\"text\"\r\n      :placeholder=\"placeholder\"\r\n      v-model=\"input_val\"\r\n      :style=\"`color: ${settings.getters.getColor()}`\"\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      required: false,\r\n      default: '',\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const settings = inject('settings');\r\n\r\n    const value_handler = {\r\n      get() {\r\n        return props.value;\r\n      },\r\n      set(val: string) {\r\n        emit('update:modelValue', val);\r\n      },\r\n    };\r\n\r\n    // @ts-ignore\r\n    const input_val = computed(value_handler);\r\n\r\n    return {\r\n      settings,\r\n      input_val,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './inputtext';\r\n</style>","\r\nimport { computed, defineComponent, inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      required: false,\r\n      default: '',\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const settings = inject('settings');\r\n\r\n    const value_handler = {\r\n      get() {\r\n        return props.value;\r\n      },\r\n      set(val: string) {\r\n        emit('update:modelValue', val);\r\n      },\r\n    };\r\n\r\n    // @ts-ignore\r\n    const input_val = computed(value_handler);\r\n\r\n    return {\r\n      settings,\r\n      input_val,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./InputText.vue?vue&type=template&id=5942ff15\"\nimport script from \"./InputText.vue?vue&type=script&lang=ts\"\nexport * from \"./InputText.vue?vue&type=script&lang=ts\"\n\nimport \"./InputText.vue?vue&type=style&index=0&id=5942ff15&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"radio-input\">\r\n        <div class=\"element\" v-for=\"(option, index) in optionsList\" :key=\"index\">\r\n            <input type=\"radio\" :name=\"option\" :id=\"option\" :value=\"option\" v-model=\"selectedVal\">\r\n            <label \r\n                :for=\"option\"\r\n                :style=\"option === selectedVal ? `color: ${settings.getters.getColor()}`  : `color: inhered`\"\r\n            >{{ option }}</label>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, computed, ref, inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        optionsList: {\r\n            type: Array as () => string[],\r\n            required: true,\r\n        },\r\n        value: {\r\n            type: String,\r\n            required: true,\r\n        }\r\n    },\r\n    setup(props, { emit }) {\r\n        const settings = inject('settings');\r\n\r\n        const valueHandler = {\r\n            get() {\r\n                return props.value;\r\n            }, \r\n            set(val: string) {\r\n                emit('update:modelValue', val);\r\n            },\r\n        }\r\n    \r\n        const sele = ref('');\r\n\r\n        // @ts-ignore\r\n        const selectedVal = computed(valueHandler);\r\n        return {\r\n            settings,\r\n            selectedVal,\r\n            sele\r\n        }\r\n    }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './radio';\r\n</style>","\r\nimport { defineComponent, computed, ref, inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        optionsList: {\r\n            type: Array as () => string[],\r\n            required: true,\r\n        },\r\n        value: {\r\n            type: String,\r\n            required: true,\r\n        }\r\n    },\r\n    setup(props, { emit }) {\r\n        const settings = inject('settings');\r\n\r\n        const valueHandler = {\r\n            get() {\r\n                return props.value;\r\n            }, \r\n            set(val: string) {\r\n                emit('update:modelValue', val);\r\n            },\r\n        }\r\n    \r\n        const sele = ref('');\r\n\r\n        // @ts-ignore\r\n        const selectedVal = computed(valueHandler);\r\n        return {\r\n            settings,\r\n            selectedVal,\r\n            sele\r\n        }\r\n    }\r\n});\r\n","import { render } from \"./Radio.vue?vue&type=template&id=4e5784fe\"\nimport script from \"./Radio.vue?vue&type=script&lang=ts\"\nexport * from \"./Radio.vue?vue&type=script&lang=ts\"\n\nimport \"./Radio.vue?vue&type=style&index=0&id=4e5784fe&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"card-wrapper\">\r\n        <div class=\"pid\" :style=\"{color: settings.getters.getColor() }\">{{process.pid}}</div>\r\n        <div class=\"content\">\r\n           <div class=\"section\">\r\n               <Icon \r\n                :icon=\"'clocktimeline'\"\r\n                :width=\"settings.getters.getFontSize() * 1.2\"\r\n                :height=\"settings.getters.getFontSize() * 1.2\"\r\n                class=\"section-icon\"\r\n               />\r\n               <span>Tiempo de arrivo</span>\r\n           </div>\r\n           <div class=\"arrival-time\" :style=\"{color: settings.getters.getColor() }\">{{process.arrival_time}}</div>\r\n           <div class=\"section\">\r\n               <Icon \r\n                :icon=\"'list'\"\r\n                :width=\"settings.getters.getFontSize() * 1.2\"\r\n                :height=\"settings.getters.getFontSize() * 1.2\"\r\n                class=\"section-icon\"\r\n               />\r\n               <span>Referencias</span>\r\n           </div>\r\n           <span class=\"references\" :style=\"{color: settings.getters.getColor() }\">{{process.references.join(', ')}}</span>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, inject } from 'vue';\r\nimport Icon from '@/components/Icon/Icon.vue';\r\nimport { IProcessInput } from '@/model/loader';\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        Icon,\r\n    },\r\n    props: {\r\n        process: {\r\n            type: Object as () => IProcessInput,\r\n            requiered: true\r\n        },\r\n    },\r\n    setup () {\r\n        const settings = inject('settings');\r\n        return {\r\n            settings,\r\n        }\r\n    }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './processcard'\r\n</style>","\r\nimport { defineComponent, inject } from 'vue';\r\nimport Icon from '@/components/Icon/Icon.vue';\r\nimport { IProcessInput } from '@/model/loader';\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        Icon,\r\n    },\r\n    props: {\r\n        process: {\r\n            type: Object as () => IProcessInput,\r\n            requiered: true\r\n        },\r\n    },\r\n    setup () {\r\n        const settings = inject('settings');\r\n        return {\r\n            settings,\r\n        }\r\n    }\r\n});\r\n","import { render } from \"./ProcessCard.vue?vue&type=template&id=313e1abe\"\nimport script from \"./ProcessCard.vue?vue&type=script&lang=ts\"\nexport * from \"./ProcessCard.vue?vue&type=script&lang=ts\"\n\nimport \"./ProcessCard.vue?vue&type=style&index=0&id=313e1abe&lang=scss\"\nscript.render = render\n\nexport default script","\r\nimport { computed, defineComponent, inject, onMounted, ref } from 'vue'\r\nimport Modal from '@/components/Modal/Modal.vue';\r\nimport Button from '@/components/Button/Button.vue';\r\nimport Dropdown from '@/components/Dropdown/Dropdown.vue';\r\nimport InputNumber from '@/components/InputNumber/InputNumber.vue';\r\nimport InputText from '@/components/InputText/InputText.vue';\r\nimport Radio from '@/components/Radio/Radio.vue';\r\nimport ProcessCard from '@/components/ProcessCard/ProcessCard.vue';\r\nimport Icon from '@/components/Icon/Icon.vue';\r\nimport { IProcessInput } from '@/model/loader';\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        Modal,\r\n        Button,\r\n        Dropdown,\r\n        InputNumber,\r\n        InputText,\r\n        Radio,\r\n\t\tProcessCard,\r\n        Icon,\r\n    },\r\n    props: {\r\n        algorithm: {\r\n            type: String,\r\n            required: true,\r\n        }\r\n    },\r\n    setup(props) {\r\n\r\n        const settings = inject('settings');\r\n        const showModal = ref(false);\r\n\r\n        const openModal = () => {\r\n            showModal.value = true;\r\n        }\r\n\r\n        const closeModal = () => {\r\n            showModal.value = false;\r\n            console.log('SE cerro jejeje');\r\n        }\r\n\r\n        const pid_list = ref(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']);\r\n        const selected_pid = ref('');\r\n        const arrival_time = ref(0);\r\n        const pages = ref(1);\r\n        const refs_options = ['Manual', 'Aleatorio'];\r\n        const refs_opt = ref('');\r\n        const input_refs = ref('');\r\n        const inputProcesses = ref<IProcessInput []>([]);\r\n\r\n\t\tconst physical_size = ref(4);\r\n\t\tconst virtual_size = ref(6);\r\n\r\n        const opt1 = ref(3);\r\n        const opt2 = ref(3);\r\n\r\n        function addProcess() {\r\n            pid_list.value = pid_list.value.filter((e) => e !== selected_pid.value);\r\n            if (refs_opt.value === 'Manual') {\r\n                let cad: string[] = input_refs.value.replaceAll(' ', '').split(',');\r\n                cad = cad.map((x) => x.trim());\r\n                const algo = cad.map((x) => parseInt(x, 10));\r\n                inputProcesses.value.push({\r\n                    pid: selected_pid.value,\r\n                    arrival_time: arrival_time.value,\r\n                    pages: pages.value,\r\n                    total_time: input_refs.value.length,\r\n                    references: algo,\r\n                });\r\n            } else {\r\n                const refs_arr: number[] = [];\r\n                const limite = parseInt(input_refs.value, 10);\r\n                console.log(input_refs.value);\r\n                for (let i = 0; i < limite; i += 1) \r\n                    refs_arr.push(Math.round(Math.random() * (pages.value - 1)));\r\n                inputProcesses.value.push({\r\n                    pid: selected_pid.value,\r\n                    arrival_time: arrival_time.value,\r\n                    pages: pages.value,\r\n                    total_time: refs_arr.length,\r\n                    references: refs_arr,\r\n                });\r\n            }\r\n\t\tconsole.log(inputProcesses.value);\r\n            selected_pid.value = '';\r\n            arrival_time.value = 0;\r\n            pages.value = 1;\r\n            refs_opt.value = '';\r\n            input_refs.value = '';\r\n            console.log(inputProcesses.value);\r\n\t\t\tcloseModal();\r\n        }\r\n\r\n        const view = ref('');\r\n        onMounted(() => {\r\n            switch(props.algorithm){\r\n                case 'fifo':\r\n                    view.value = 'Fifo'\r\n                    break;\r\n                case 'ws':\r\n                    view.value = 'Set'\r\n                    break;\r\n                case 'wsclock':\r\n                    view.value = 'Clock'\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n\r\n        const formValidation = computed(() => {\r\n            \r\n            if(selected_pid.value.length <= 0 || input_refs.value.length <= 0){ \r\n                console.log('JolissjsjsA');\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        return {\r\n            showModal,\r\n            openModal,\r\n            closeModal,\r\n            settings,\r\n\r\n            pid_list,\r\n            selected_pid,\r\n            arrival_time,\r\n            pages,\r\n            refs_options,\r\n            refs_opt,\r\n            input_refs,\r\n            inputProcesses,\r\n            addProcess,\r\n\r\n\t\t\tphysical_size,\r\n\t\t\tvirtual_size,\r\n            opt1,\r\n            opt2,\r\n\r\n            view,\r\n            formValidation, \r\n        }\r\n    }\r\n})\r\n","import { render } from \"./Form.vue?vue&type=template&id=f8ebedb8\"\nimport script from \"./Form.vue?vue&type=script&lang=ts\"\nexport * from \"./Form.vue?vue&type=script&lang=ts\"\n\nimport \"./Form.vue?vue&type=style&index=0&id=f8ebedb8&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"fifo\">\r\n        <div class=\"fifo-blur\" :class=\"{ blur: modal_open || settings_modal }\">\r\n            <div class=\"fifo__main\">\r\n                <div class=\"fifo__main__info\">\r\n                    <div class=\"info-panel\">\r\n                        <InfoPanel\r\n                            :current=\"current\"\r\n                            :completed=\"completed\"\r\n                            :pageFaults=\"faults\"\r\n                        />\r\n                    </div>\r\n                    <Table class=\"process-queue\"\r\n                        :title=\"'Procesos'\"\r\n                        :listIterable=\"processQueue\"\r\n                    />\r\n                </div>\r\n                <div class=\"fifo__main__center\">\r\n                    <div class=\"message\" v-if=\"message.length > 0\">{{message}}</div>\r\n                    <Table class=\"fifo-physic-mem\"\r\n                        :title=\"'Memoria fisica'\"\r\n                        :listIterable=\"physicalMemory\"\r\n                        :slots=\"physicalSize\"\r\n                        :selected=\"oldest\"\r\n                    />\r\n                </div>\r\n                <div class=\"fifo__main__lat\">\r\n                    <Table\r\n                        :listIterable=\"virtualMemory\"\r\n                        :title=\"'Memoria virtual'\"\r\n                        :slots=\"virtualSize\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div class=\"fifo__buttons\">\r\n                <Button\r\n                    :icon=\"'leave'\"\r\n                    :onClickFunction=\"openModal\"\r\n                    :expand=\"true\"\r\n                    :round=\"true\"\r\n                    :size=\"settings.getters.getFontSize() * 1.2\"\r\n                    :color=\"'#db1919'\"\r\n                />\r\n                <div class=\"action-btns\">\r\n                    <!-- <Button\r\n                        :onClickFunction=\"nextStep\"\r\n                        :icon=\"'prev'\"\r\n                        :round=\"true\"\r\n                        :expand=\"true\"\r\n                        :size=\"24\"\r\n                    /> -->\r\n                    <!-- <Button\r\n                        :onClickFunction=\"nextStep\"\r\n                        :icon=\"'play'\"\r\n                        :round=\"true\"\r\n                        :expand=\"true\"\r\n                        :size=\"24\"\r\n                    /> -->\r\n                    <Button\r\n                        :onClickFunction=\"nextStep\"\r\n                        :icon=\"'next'\"\r\n                        :round=\"true\"\r\n                        :expand=\"true\"\r\n                        :size=\"settings.getters.getFontSize() * 1.2\"\r\n                        :color=\"settings.getters.getColor()\"\r\n                    />\r\n                </div>\r\n                <Button class=\"btn-sett\"\r\n                    :icon=\"'settings'\"\r\n                    :round=\"true\"\r\n                    :expand=\"true\"\r\n                    :size=\"settings.getters.getFontSize() * 1.2\"\r\n                    :color=\"settings.getters.getColor()\"\r\n                    :onClickFunction=\"openSettings\"\r\n                />\r\n            </div>\r\n        </div>\r\n        <ConfirmModal \r\n            :showing=\"modal_open\"\r\n            @update:showing=\"modal_open\"\r\n            @close=\"closeModal\"\r\n        >\r\n            ¿Está seguro que desea salir?<br>\r\n            Al salir perderá el estado actual del simulador al igual que la informacion de los procesos de entrada\r\n        </ConfirmModal>\r\n        <Modal\r\n            :showing=\"settings_modal\"\r\n            @update:showing=\"settings_modal\"\r\n            @close=\"closeSettings\"\r\n        >\r\n            <Settings />\r\n        </Modal>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, inject, onMounted, ref } from 'vue';\r\nimport Button from '@/components/Button/Button.vue';\r\nimport InfoPanel from '@/components/InfoPanel/InfoPanel.vue';\r\nimport Table from '@/components/Table/Table.vue';\r\nimport ConfirmModal from '@/components/ConfirmModal/ConfirmModal.vue';\r\nimport Modal from '@/components/Modal/Modal.vue'\r\nimport Settings from '@/components/Settings/Settings.vue';\r\n\r\nimport CPU from '@/model/cpu';\r\n\r\nexport default defineComponent({\r\n    components:{\r\n        Button,\r\n        InfoPanel,\r\n        Table,\r\n        ConfirmModal,\r\n        Modal,\r\n        Settings\r\n        // HorizontalTable,\r\n    },\r\n    props: {\r\n        inputArray: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        virtualSize: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        physicalSize: {\r\n            type: Number,\r\n            rquired: true\r\n        },\r\n        opt1: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        },\r\n        opt2: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        }\r\n    },\r\n    setup(props) {\r\n        const settings = inject('settings');\r\n\r\n        const lista: string[] = [];\r\n        const cpu = ref<CPU>();\r\n\r\n        const message = ref<string>('');\r\n\r\n        const modal_open = ref(false);\r\n        const settings_modal = ref(false);\r\n\r\n        const openModal = () => {\r\n            modal_open.value = true;\r\n        }\r\n\r\n        const closeModal = () => {\r\n            modal_open.value = false\r\n        }\r\n\r\n        const openSettings = () => settings_modal.value = true;\r\n        const closeSettings = () => {\r\n            settings_modal.value = false;\r\n            //@ts-ignore\r\n            localStorage.setItem('settings', JSON.stringify(settings.settings));\r\n            console.log('Si se pudo o puro pedo?')\r\n        }\r\n\r\n        const faults = computed(() => {\r\n            if(cpu.value === undefined) return 0;\r\n            if(cpu.value.faults !== null)\r\n                return cpu.value.faults;\r\n            return 0;\r\n        });\r\n\r\n        const current = computed((): string => {\r\n            if(cpu.value === undefined) return ''\r\n            if(cpu.value.computed_process !== null)\r\n                return `${cpu.value.computed_process.PID}-${cpu.value.current_reference}`;\r\n            return ''\r\n        });\r\n\r\n        const completed = computed((): string => {\r\n            if(cpu.value === undefined) return '-/-';\r\n            return `${cpu.value.completed_processes}/${cpu.value.total_processes}`;\r\n        });\r\n\r\n        const processQueue = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.scheduler.job_queue.queue.map(x => `${x.PID}`)\r\n        });\r\n\r\n        const virtualMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.virtual.pages.map((x) => (!x.free ? `${x.page.process_pid}-${x.page.process_page}` : ' '));\r\n        });\r\n\r\n        const physicalMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.physical.frames.map((x) => (!x.free ? `${x.frame.process_pid}-${x.frame.process_page}` : ' '));\r\n        });\r\n\r\n        const oldest = computed((): number => {\r\n            if(cpu.value === undefined) return -1;\r\n            return cpu.value.mmu.getOldest();\r\n        })\r\n\r\n        const nextStep = () => {\r\n            console.log(cpu.value.next());\r\n            console.log('Boton')\r\n            const temp = cpu.value.getError();\r\n            if(temp.length > 0){\r\n                message.value = temp;\r\n                setTimeout(() => {\r\n                    message.value = '';\r\n                }, 3000);\r\n            }\r\n\r\n        }\r\n\r\n        function initCPU(){\r\n            //@ts-ignore\r\n            cpu.value = new CPU(JSON.parse(props.inputArray), props.physicalSize, props.virtualSize, \r\n                                //@ts-ignore\r\n                                settings.getters.getQuantum(), 'Fifo', props.opt1, props.opt2);\r\n            console.log('___', cpu.value);\r\n        }\r\n\r\n        onMounted(initCPU);\r\n\r\n        return {\r\n            lista,\r\n            cpu,\r\n            message,\r\n            modal_open,\r\n            settings_modal,\r\n            openModal,\r\n            closeModal,\r\n            openSettings,\r\n            closeSettings,\r\n            faults,\r\n            current,\r\n            nextStep,\r\n            completed,\r\n            processQueue,\r\n            virtualMemory,\r\n            physicalMemory,\r\n            oldest,\r\n            settings,\r\n        }\r\n    }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './fifo';\r\n</style>","<template>\r\n    <div class=\"info\">\r\n        <div class=\"info__screen\">\r\n            <!-- <Icon class=\"info__icon\" :icon=\"'screen'\"/> -->\r\n            <p class=\"info__current\" :style=\"{color: settings.getters.getColor() }\">{{current}}</p>\r\n        </div>\r\n        <p>Procesos completados</p>\r\n        <p class=\"info__completed\" :style=\"{color: settings.getters.getColor() }\">{{completed}}</p>\r\n        <p>Fallos de pagina</p>\r\n        <p class=\"info__page-faults\" :style=\"{color: '#db1919'}\">{{pageFaults}}</p>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, inject } from 'vue';\r\n// import Icon from '@/components/Icon/Icon.vue';\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        // Icon,\r\n    },\r\n    props: {\r\n        current: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        completed: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        pageFaults: {\r\n            type: Number,\r\n            required: false,\r\n        },\r\n    },\r\n    setup () {\r\n        const settings = inject('settings');\r\n        return {\r\n            settings,\r\n        }\r\n    }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './infopanel';\r\n</style>","\r\nimport { defineComponent, inject } from 'vue';\r\n// import Icon from '@/components/Icon/Icon.vue';\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        // Icon,\r\n    },\r\n    props: {\r\n        current: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        completed: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        pageFaults: {\r\n            type: Number,\r\n            required: false,\r\n        },\r\n    },\r\n    setup () {\r\n        const settings = inject('settings');\r\n        return {\r\n            settings,\r\n        }\r\n    }\r\n});\r\n","import { render } from \"./InfoPanel.vue?vue&type=template&id=e360b00e\"\nimport script from \"./InfoPanel.vue?vue&type=script&lang=ts\"\nexport * from \"./InfoPanel.vue?vue&type=script&lang=ts\"\n\nimport \"./InfoPanel.vue?vue&type=style&index=0&id=e360b00e&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"table\">\r\n        <div class=\"table__title\" v-if=\"title\">{{title}}</div>\r\n        <div class=\"table__content\">\r\n            <div class=\"table__item used\" \r\n                v-for=\"(item, index) in listIterable\" \r\n                :key=\"index\"\r\n                :style=\"index === selected ? `color: ${settings.getters.getColor()}`  : `color: inhered`\"\r\n            >\r\n                {{item}}\r\n            </div>\r\n            <div class=\"table__item\" v-for=\"i in slots - listIterable.length\" :key=\"i\">\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        title: {\r\n            type: String,\r\n            required: false\r\n        },\r\n        listIterable: {\r\n            type: Array as () => string[],\r\n            required: true,\r\n        },\r\n        slots: {\r\n            type: Number,\r\n            required: false,\r\n            default: 4\r\n        },\r\n        selected: {\r\n            type: Number,\r\n            required: false,\r\n            default: -1\r\n        }\r\n    },\r\n    setup(props) {\r\n        const settings = inject('settings');\r\n\r\n        // const freeSlots = computed(() => {\r\n        const freeSlots = () => {\r\n            // @ts-ignore\r\n            return props.listIterable.length - props.slots;\r\n        };\r\n\r\n        return {\r\n            settings,\r\n            freeSlots,\r\n        }\r\n    }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './table';\r\n</style>","\r\nimport { defineComponent, inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        title: {\r\n            type: String,\r\n            required: false\r\n        },\r\n        listIterable: {\r\n            type: Array as () => string[],\r\n            required: true,\r\n        },\r\n        slots: {\r\n            type: Number,\r\n            required: false,\r\n            default: 4\r\n        },\r\n        selected: {\r\n            type: Number,\r\n            required: false,\r\n            default: -1\r\n        }\r\n    },\r\n    setup(props) {\r\n        const settings = inject('settings');\r\n\r\n        // const freeSlots = computed(() => {\r\n        const freeSlots = () => {\r\n            // @ts-ignore\r\n            return props.listIterable.length - props.slots;\r\n        };\r\n\r\n        return {\r\n            settings,\r\n            freeSlots,\r\n        }\r\n    }\r\n});\r\n","import { render } from \"./Table.vue?vue&type=template&id=18e1abd0\"\nimport script from \"./Table.vue?vue&type=script&lang=ts\"\nexport * from \"./Table.vue?vue&type=script&lang=ts\"\n\nimport \"./Table.vue?vue&type=style&index=0&id=18e1abd0&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n\t<div>\r\n\t\t<!-- <transition\r\n\t\t\tenter-active-class=\"transition ease-out duration-300\"\r\n\t\t\tenter-from-class=\"opacity-0\"\r\n\t\t\tenter-to-class=\"opacity-100\"\r\n\t\t\tleave-active-class=\"transition ease-in duration-200\"\r\n\t\t\tleave-from-class=\"opacity-100\"\r\n\t\t\tleave-to-class=\"opacity-0\"\r\n\t\t> -->\r\n\t\t<div v-show=\"showing\" class=\"info-modal\">\r\n\t\t\t<div class=\"info-modal__container\">\r\n\t\t\t\t<div class=\"modal__content\">\r\n\t\t\t\t\t<slot></slot>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"confirm-btns\">\r\n\t\t\t\t\t<router-link to=\"/\" class=\"btn expand\" :style=\"{ color: '#98c949' }\">Aceptar</router-link>\r\n\t\t\t\t\t<button class=\"btn expand\" @click.prevent=\"close\" :style=\"{ color: '#db1919' }\">Cancelar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<!-- </transition> -->\r\n\t</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n\tprops: {\r\n\t\tshowing: {\r\n\t\t\ttype: Boolean,\r\n\t\t\trequired: true,\r\n\t\t\tdefault: false,\r\n\t\t},\r\n\t},\r\n\tsetup(props, { emit }) {\r\n\r\n\t\tconst close = () => {\r\n\t\t\tconsole.log('Modal closed');\r\n\t\t\temit('update:showing', false);\r\n\t\t\temit('close');\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tclose,\r\n\t\t}\r\n\t}\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './confirmmodal';\r\n</style>","\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n\tprops: {\r\n\t\tshowing: {\r\n\t\t\ttype: Boolean,\r\n\t\t\trequired: true,\r\n\t\t\tdefault: false,\r\n\t\t},\r\n\t},\r\n\tsetup(props, { emit }) {\r\n\r\n\t\tconst close = () => {\r\n\t\t\tconsole.log('Modal closed');\r\n\t\t\temit('update:showing', false);\r\n\t\t\temit('close');\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tclose,\r\n\t\t}\r\n\t}\r\n})\r\n","import { render } from \"./ConfirmModal.vue?vue&type=template&id=887e23ea\"\nimport script from \"./ConfirmModal.vue?vue&type=script&lang=ts\"\nexport * from \"./ConfirmModal.vue?vue&type=script&lang=ts\"\n\nimport \"./ConfirmModal.vue?vue&type=style&index=0&id=887e23ea&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n\t<div class=\"settings\">\r\n\t\t<div class=\"sett-title\">General</div>\r\n\t\t<div class=\"sett-opt\">\r\n\t\t\t<div class=\"sett-opt-title\">Tamaño de fuente</div>\r\n\t\t\t<div class=\"sett-opt-content\">\r\n\t\t\t\t<input type=\"range\"\r\n\t\t\t\t\tclass=\"range-input\"\r\n\t\t\t\t\tmin=\"12\"\r\n\t\t\t\t\tmax=\"20\"\r\n\t\t\t\t\tstep=\"2\"\r\n\t\t\t\t\tv-model.number=\"settings.settings.fontSize\"\r\n\t\t\t\t>\r\n\t\t\t\t<p>{{settings.getters.getFontSize()}} pixeles</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"sett-opt\">\r\n\t\t\t<div class=\"sett-opt-title\">Tema oscuro</div>\r\n\t\t\t<div class=\"sett-opt-content\">\r\n\t\t\t\t<Toggle \r\n\t\t\t\t\t:value=\"settings.settings.darkMode\"\r\n\t\t\t\t\tv-model=\"settings.settings.darkMode\"\r\n\t\t\t\t/>\r\n\t\t\t\t<p>{{settings.getters.getTheme() ? 'Activado' : 'Desactivado'}}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"sett-opt\">\r\n\t\t\t<div class=\"sett-opt-title\">Color de tema</div>\r\n\t\t\t<div class=\"sett-opt-content\">\r\n\t\t\t\t<input class=\"color-btn\" \r\n\t\t\t\t\tv-for=\"item in colorMap\" :key=\"item.id\" :style=\"{ background: item.code}\"\r\n\t\t\t\t\ttype=\"radio\" :name=\"item.color\" :id=\"item.color\"\r\n\t\t\t\t\tv-model=\"settings.settings.themeColor\" :value=\"item.code\"\r\n\t\t\t\t>\r\n\t\t\t\t<p :style=\"{ color: settings.getters.getColor() }\">{{searchColorName}}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"sett-title\">Simulador</div>\r\n\t\t<div class=\"sett-opt\">\r\n\t\t\t<div class=\"sett-opt-title\">Maximo de paginas por proceso</div>\r\n\t\t\t<div class=\"sett-opt-content\">\r\n\t\t\t\t<input type=\"range\"\r\n\t\t\t\t\tclass=\"range-input\"\r\n\t\t\t\t\tmin=\"4\"\r\n\t\t\t\t\tmax=\"12\"\r\n\t\t\t\t\tstep=\"1\"\r\n\t\t\t\t\tv-model.number=\"settings.settings.pages_per_process\"\r\n\t\t\t\t>\r\n\t\t\t\t<p>{{settings.settings.pages_per_process}} pagina</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"sett-opt\">\r\n\t\t\t<div class=\"sett-opt-title\">Quantum</div>\r\n\t\t\t<div class=\"sett-opt-content\">\r\n\t\t\t\t<input type=\"range\"\r\n\t\t\t\t\tclass=\"range-input\"\r\n\t\t\t\t\tmin=\"3\"\r\n\t\t\t\t\tmax=\"8\"\r\n\t\t\t\t\tstep=\"1\"\r\n\t\t\t\t\tv-model.number=\"settings.settings.quantum\"\r\n\t\t\t\t>\r\n\t\t\t\t<p>Quantum: {{settings.getters.getQuantum()}}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"sett-title\">Info</div>\r\n\t\t<div class=\"sett-opt\">\r\n\t\t\t<a class=\"github-link\" target=\"_blank\"\r\n\t\t\t\thref=\"https://github.com/ObjetosDeAprendizajeFCCBUAP\"\r\n\t\t\t>\r\n\t\t\t\t<span>Repositorio de Github</span>\r\n\t\t\t\t<Icon \r\n\t\t\t\t\t:icon=\"'github'\"\r\n\t\t\t\t\t:width=\"settings.getters.getFontSize() * 1.2\"\r\n\t\t\t\t\t:height=\"settings.getters.getFontSize() * 1.2\"\r\n\t\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, inject, ref } from 'vue'\r\nimport Toggle from '@/components/Toggle/Toggle.vue';\r\nimport Icon from '@/components/Icon/Icon.vue';\r\n\r\nexport default defineComponent({\r\n\tcomponents: {\r\n\t\tToggle,\r\n\t\tIcon,\r\n\t},\r\n\tsetup () {\r\n\r\n\t\tconst settings = inject('settings');\r\n\r\n\t\tconst font_size = ref(20);\r\n\t\tconst dark_theme = ref(true);\r\n\t\tconst color = ref('');\r\n\t\tconst pages_per_process = ref(5);\r\n\t\tconst quantum = ref(4);\r\n\r\n\t\tconst colorMap = [\r\n\t\t\t{id: 0, color: 'Default', code: 'var(--fg-color)'},\r\n\t\t\t{id: 1, color: 'Aqua', code: '#6f6cde'},\r\n\t\t\t{id: 2, color: 'Azul', code :'#062af2'},\r\n\t\t\t{id: 3, color: 'Rosa', code :'#dd4774'},\r\n\t\t\t{id: 4, color: 'Naranja', code :'#ce792b'},\r\n\t\t];\r\n\r\n\t\tconst searchColorName = computed(() => {\r\n\t\t\tfor(const temp of colorMap)\r\n\t\t\t//@ts-ignore\r\n\t\t\t\tif(temp.code === settings.getters.getColor())\r\n\t\t\t\t\treturn temp.color;\r\n\t\t\treturn ''\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tfont_size,\r\n\t\t\tdark_theme,\r\n\t\t\tcolor,\r\n\t\t\tpages_per_process,\r\n\t\t\tquantum,\r\n\r\n\t\t\tcolorMap,\r\n\t\t\tsettings,\r\n\t\t\tsearchColorName,\r\n\t\t};\r\n\t}\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './settings';\r\n</style>","<template>\r\n    <div class=\"theme-switch\">\r\n        <input type=\"checkbox\" id=\"switch\" class=\"toggle\">\r\n        <label for=\"switch\" class=\"toggle\" @click=\"toggle\">Toggle</label>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n//To do: \r\n//[ ] Hacer el computed para el color del switch\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        normalColor : {\r\n            type: String,\r\n            requiered: false\r\n        },\r\n        selectedColor: {\r\n            type: String,\r\n            required: false,\r\n        },\r\n        value: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        function: {\r\n            type: Function,\r\n            required: false,\r\n        }\r\n    },\r\n    setup(props, { emit }) {\r\n\r\n        function toggle() {\r\n            // if(props.function){\r\n            //     props.function();\r\n            // }\r\n            emit('update:modelValue', !props.value);\r\n        }\r\n        return { toggle };\r\n    },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '_toggle.scss';\r\n</style>\r\n","\r\n//To do: \r\n//[ ] Hacer el computed para el color del switch\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        normalColor : {\r\n            type: String,\r\n            requiered: false\r\n        },\r\n        selectedColor: {\r\n            type: String,\r\n            required: false,\r\n        },\r\n        value: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        function: {\r\n            type: Function,\r\n            required: false,\r\n        }\r\n    },\r\n    setup(props, { emit }) {\r\n\r\n        function toggle() {\r\n            // if(props.function){\r\n            //     props.function();\r\n            // }\r\n            emit('update:modelValue', !props.value);\r\n        }\r\n        return { toggle };\r\n    },\r\n})\r\n","import { render } from \"./Toggle.vue?vue&type=template&id=5057d4ef\"\nimport script from \"./Toggle.vue?vue&type=script&lang=ts\"\nexport * from \"./Toggle.vue?vue&type=script&lang=ts\"\n\nimport \"./Toggle.vue?vue&type=style&index=0&id=5057d4ef&lang=scss\"\nscript.render = render\n\nexport default script","\r\nimport { computed, defineComponent, inject, ref } from 'vue'\r\nimport Toggle from '@/components/Toggle/Toggle.vue';\r\nimport Icon from '@/components/Icon/Icon.vue';\r\n\r\nexport default defineComponent({\r\n\tcomponents: {\r\n\t\tToggle,\r\n\t\tIcon,\r\n\t},\r\n\tsetup () {\r\n\r\n\t\tconst settings = inject('settings');\r\n\r\n\t\tconst font_size = ref(20);\r\n\t\tconst dark_theme = ref(true);\r\n\t\tconst color = ref('');\r\n\t\tconst pages_per_process = ref(5);\r\n\t\tconst quantum = ref(4);\r\n\r\n\t\tconst colorMap = [\r\n\t\t\t{id: 0, color: 'Default', code: 'var(--fg-color)'},\r\n\t\t\t{id: 1, color: 'Aqua', code: '#6f6cde'},\r\n\t\t\t{id: 2, color: 'Azul', code :'#062af2'},\r\n\t\t\t{id: 3, color: 'Rosa', code :'#dd4774'},\r\n\t\t\t{id: 4, color: 'Naranja', code :'#ce792b'},\r\n\t\t];\r\n\r\n\t\tconst searchColorName = computed(() => {\r\n\t\t\tfor(const temp of colorMap)\r\n\t\t\t//@ts-ignore\r\n\t\t\t\tif(temp.code === settings.getters.getColor())\r\n\t\t\t\t\treturn temp.color;\r\n\t\t\treturn ''\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tfont_size,\r\n\t\t\tdark_theme,\r\n\t\t\tcolor,\r\n\t\t\tpages_per_process,\r\n\t\t\tquantum,\r\n\r\n\t\t\tcolorMap,\r\n\t\t\tsettings,\r\n\t\t\tsearchColorName,\r\n\t\t};\r\n\t}\r\n});\r\n","import { render } from \"./Settings.vue?vue&type=template&id=4b112a52\"\nimport script from \"./Settings.vue?vue&type=script&lang=ts\"\nexport * from \"./Settings.vue?vue&type=script&lang=ts\"\n\nimport \"./Settings.vue?vue&type=style&index=0&id=4b112a52&lang=scss\"\nscript.render = render\n\nexport default script","/**\r\n * @author Edgar Castro Martinez\r\n */\r\n\r\nimport MMU from \"./mmu\";\r\nimport Process from \"./process\";\r\nimport VirtualMemory from \"./virtual_memory\";\r\nimport PhysicalMemory from \"./physical_memory\";\r\n\r\nexport default class FIFO implements MMU {\r\n\r\n    physical: PhysicalMemory;\r\n    virtual: VirtualMemory;\r\n\r\n    oldest_frame: number;\r\n\r\n    /**\r\n     * Creates an FIFO page replacement algorithm instance for the memory management \r\n     * @constructor\r\n     * @param { VirtualMemory } virtual - An instance of virtual memory\r\n     * @param { PhysicalMemory } physical - An instance of physical memory\r\n     */\r\n    constructor(virtual: VirtualMemory, physical: PhysicalMemory){\r\n        this.virtual \t\t= virtual;\r\n        this.physical \t\t= physical;\r\n\r\n        this.oldest_frame \t= 0;\r\n    }\r\n\r\n    /**\r\n     * Load a process to memory\r\n     * @param { Process } process - The process to load\r\n     * @returns { boolean } True if the process load successfully, else otherwise \r\n     */\r\n    loadProcess(process: Process): boolean {\r\n        return this.virtual.loadProcess(process);\r\n    }\r\n\r\n    /**\r\n     * Delete a process from virtual and physical memory.\r\n     * @param { string } pid - The pid of the process to be deleted\r\n     */\r\n    deleteProcess(pid: string): void{\r\n        this.virtual.deleteProcess(pid);\r\n        this.physical.deleteProcess(pid);\r\n    }\r\n\r\n    /**\r\n     * Make a reference to specific process page\r\n     * @param { string } pid - Process PID\r\n     * @param { number } page - Process page\r\n     * @returns { boolean } - return true if exist page fault\r\n     */\r\n    referenceProcess(pid: string, page: number): boolean {\r\n        let fault = true;\r\n        if(this.physical.isFull()){\r\n            if(this.physical.hasProcessPage(pid, page)){\r\n                this.physical.releaseFrame(null, null, this.oldest_frame % this.physical.size);\r\n                this.oldest_frame++;\r\n                this.physical.loadPage(pid, page);\r\n            } else fault = false;\r\n        } else {\r\n            if(!this.physical.hasProcessPage(pid, page))\r\n                this.physical.loadPage(pid, page);\r\n            else\r\n                fault = false;\r\n        }\r\n        return fault;\r\n    }\r\n\r\n    /**\r\n     * Gets the oldest frame in physical memory\r\n     * @returns { number } the number of frame in physical memory\r\n     */\r\n    getOldest(): number {\r\n        return this.oldest_frame;\r\n    }\r\n\r\n}","/**\r\n * @author Edgar Castro Martinez\r\n */\r\n\r\nimport Process from \"./process\";\r\n\r\nexport default class JobQueue {\r\n\r\n    queue : Process[];\r\n    index : number;\r\n\r\n    /**\r\n     * Create an instance of JobQueue\r\n     */\r\n    constructor(){\r\n        this.queue = [];\r\n        this.index = 0;\r\n    }\r\n\r\n    /**\r\n     * Add a process to the job queue\r\n     * @param { Process } process - The process to be added to the job queue\r\n     */\r\n    public registerProcess(process: Process) : void {\r\n        this.queue.push(process)\r\n    }\r\n\r\n    /**\r\n     * Remove a process from the job queue\r\n     * @param { string } pid - The pid of the process to be deleted from the job queue\r\n     */\r\n    public deleteProcess(pid : string) : void {\r\n        this.queue = this.queue.filter(p => p.PID !== pid);\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Chose and return the next process\r\n     * @returns { Process } Return the next process if there one, null otherwise\r\n     */\r\n    public choseProcess() : Process | null {\r\n        if(this.queue.length === 0) return null;\r\n        return this.queue[this.index++ % this.queue.length];\r\n    }\r\n\r\n    /**\r\n     * Return the object in string representation.\r\n     */\r\n    public toString() : string {\r\n        return this.queue.join('-----------------\\n');\r\n    }\r\n\r\n}\r\n","/**\r\n * @author Edgar Castro Martinez\r\n */\r\n\r\n/**\r\n * @interface IProcessInput - To have an input format\r\n * @field pid - The process PID\r\n * @field arrival_time - Time when the process loadd to CPU\r\n * @field total_tiem - The time to take the process ends\r\n * @field pages - The number of pages that the process has\r\n * @field references [optional] The list of references to make\r\n */\r\nexport interface IProcessInput {\r\n    pid             : string;\r\n    arrival_time    : number;\r\n    total_time      : number;\r\n    pages           : number;\r\n    references?     : number[];\r\n}\r\n\r\n//Just a type definition that define a dictionary where the keys are numbers\r\n//and the values are InputProcesses\r\ntype sortedProcDic = { [index: number]: IProcessInput[] };\r\n\r\nexport default class Loader {\r\n\r\n    input: IProcessInput[];\r\n    sortedProcesses: sortedProcDic;\r\n\r\n    /**\r\n     * Creates an instance of Loader\r\n     * @param { IProcessInput[] } input - The list of process\r\n     */\r\n    constructor(input: IProcessInput[]) {\r\n        this.input              = input;\r\n        this.sortedProcesses    = {} as sortedProcDic;\r\n        this.processInput(input);\r\n    }\r\n\r\n    /**\r\n     * Excecute a CPU tick and check if have processes to arrive\r\n     * @param time - The time in CPU\r\n     */\r\n    public tick(time: number): IProcessInput[] {\r\n        return this.sortedProcesses[time] ? this.sortedProcesses[time] : [];\r\n    }\r\n\r\n    /**\r\n     * Sort the processes based on the arrival time and groups them\r\n     * @param { IProcessInput[] } input - the list of the process\r\n     */\r\n    private processInput(input: IProcessInput[]): void {\r\n        this.input = input.sort((a, b) => a.arrival_time - b.arrival_time);\r\n        console.log(this.input);\r\n        this.input.forEach(e => {\r\n            if (this.sortedProcesses[e.arrival_time])\r\n                this.sortedProcesses[e.arrival_time].push(e);\r\n            else\r\n                this.sortedProcesses[e.arrival_time] = [e];\r\n        });\r\n        console.log(this.sortedProcesses);\r\n    }\r\n\r\n}\r\n","/**\r\n * @author Edgar Castro Martinez\r\n */\r\n\r\n/**\r\n * @interface IFrame - To have an input format.\r\n * @member free - For know if the frame is free or not.\r\n * @member frame - The information of frame.\r\n */\r\nexport interface IFrame {\r\n    free : boolean;\r\n    frame : Frame;\r\n}\r\n\r\nexport class Frame {\r\n    frame_number    : number;\r\n    size            : number;\r\n    unit            : string;\r\n\r\n    process_pid     : string;\r\n    process_page    : number;\r\n\r\n    referenced_bit  : boolean;\r\n    dirty           : boolean;\r\n    age             : number;\r\n\r\n    /**\r\n     * Create an instance of a frame.\r\n     * @param frame_number - The number or index of frame in memory.\r\n     * @param size - The size of the frame.\r\n     * @param unit - The unit of the frame.\r\n     * @param pid - The pid of process that contains the frame.\r\n     * @param page - The page of process that contains the frame.\r\n     */\r\n    constructor(frame_number : number, size : number, unit : string, pid : string, page : number){\r\n        this.frame_number   = frame_number;\r\n        this.size           = size;\r\n        this.unit           = unit;\r\n\r\n        this.referenced_bit = false;\r\n        this.dirty          = false;\r\n        this.age            = -1;\r\n\r\n        this.process_pid    = pid;\r\n        this.process_page   = page;\r\n    }\r\n\r\n    /**\r\n     * Set a dirt state for the frame.\r\n     * @param { boolean } dirt - Dirt state.\r\n     */\r\n    public dirt(dirt: boolean): void {\r\n        this.dirty = dirt;\r\n    }\r\n\r\n    /**\r\n     * Return the dirty state of frame.\r\n     * @returns { boolean } dirty state.\r\n     */\r\n    public isDirty(): boolean{\r\n        return this.dirty;\r\n    }\r\n\r\n    /**\r\n     * Set a referenced state for the frame.\r\n     * @param { boolean } ref - Referenced state.\r\n     */\r\n    public reference(ref: boolean): void {\r\n        this.referenced_bit =  ref;\r\n    }\r\n\r\n    /**\r\n     * Return the referenced state of the frame.\r\n     * @returns { boolean } - Referenced state.\r\n     */\r\n    public isReferenced(): boolean {\r\n        return this.referenced_bit;\r\n    }\r\n\r\n    /**\r\n     * Clean the referenced bit of the frame.\r\n     */\r\n    public cleanReferencedBit(): void {\r\n        this.referenced_bit = false;\r\n    }\r\n\r\n}","/**\r\n * @author Edgar Castro Martinez\r\n */\r\n\r\nimport { Frame, IFrame } from \"./frame\";\r\n\r\nexport default class PhysicalMemory {\r\n\r\n    frames  : IFrame[];\r\n    size    : number;\r\n\r\n    /**\r\n     * Creates an instance of Physical Memory\r\n     * @param frames_number - Number of frames that memory has\r\n     */\r\n    constructor(frames_number : number){\r\n        this.frames = [];\r\n        this.size   = frames_number;\r\n        this.initFrames();\r\n    }\r\n\r\n    /**\r\n     * Initialize all frames\r\n     */\r\n    private initFrames(): void {\r\n        for(let i =0 ; i < this.size; i++)\r\n            this.frames[i] = {free : true, frame : null };\r\n    }\r\n\r\n    /**\r\n     * Load a process to physical memory\r\n     * @param pid - The pid of process to load\r\n     * @param page - The page of process to load\r\n     */\r\n    public loadPage(pid: string, page: number): void {\r\n       let index: number;\r\n        for(index = 0; !this.frames[index].free && index < this.size; index++);\r\n        this.frames[index] = {\r\n           free: false,\r\n           frame: new Frame(index, 4, 'kb', pid, page)\r\n       }\r\n    }\r\n\r\n    /**\r\n     * Delete a process from memory\r\n     * @param pid - The pid of process to be deleted\r\n     */\r\n    public deleteProcess(pid: string): void {\r\n        for(let i = 0; i < this.frames.length; i++)\r\n            if(!this.frames[i].free)\r\n                if(this.frames[i].frame.process_pid === pid)\r\n                    this.frames[i] = {free : true, frame : null};\r\n    }\r\n\r\n    /**\r\n     * Update the information of specific frame in memory\r\n     * @param index - Index of frame in memory\r\n     * @param pid - PID of the process to be updated\r\n     * @param page - Page of the process to be updated\r\n     * @param _age - The age\r\n     */\r\n    public updateFrame(index: number, pid: string, page: number, _age?: number) : void{\r\n        this.frames[index].frame.process_pid = pid;\r\n        this.frames[index].frame.process_page = page;\r\n        this.frames[index].frame.age = _age;\r\n        this.frames[index].frame.reference(true);\r\n    }\r\n\r\n    /**\r\n     * Returns the index of one specific frame in memory\r\n     * @param pid - PID of the process to get index\r\n     * @param page - Page of the process to get index\r\n     * @returns The index of the process, -1 if the process not exist in memory\r\n     */\r\n    public getFrame(pid: string, page: number): number{\r\n        for(let i = 0; i < this.size; i++)\r\n            if(!this.frames[i].free)\r\n                if(this.frames[i].frame.process_pid === pid &&\r\n                    this.frames[i].frame.process_page === page)\r\n                    return i;\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Check if an specific process page exist in memory\r\n     * @param pid - The PID of the process\r\n     * @param page - The page of the process\r\n     * @returns true if the page exist in memory, false otherwise\r\n     */\r\n    public hasProcessPage(pid : string, page : number) : boolean {\r\n        for(let i = 0; i < this.size; i++)\r\n            if(!this.frames[i].free)\r\n                if(this.frames[i].frame.process_pid === pid &&\r\n                    this.frames[i].frame.process_page === page)\r\n                    return true;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Make a referene to an spacific page\r\n     * @param pid - The PID of the process to reference\r\n     * @param page - The page of the process to reference\r\n     */\r\n    public refProcessPage(pid: string, page: number): void {\r\n        for(const frame of this.frames){\r\n            if(frame.frame.process_pid === pid && frame.frame.process_page === page){\r\n                frame.frame.reference(true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Release specific frame from memory, by PID and process, or index of memory\r\n     * @param pid - The PID of the process to release\r\n     * @param page - The page of the process\r\n     * @param index - The index of memory frame to be released\r\n     */\r\n    public releaseFrame(pid?: string, page?: number, index?: number): void {\r\n        if(pid && page){\r\n            let index = -1;\r\n            for(let i = 0; i < this.frames.length; i++)\r\n                if(this.frames[i].frame)\r\n                    if(this.frames[i].frame.process_pid == pid && this.frames[i].frame.process_page == page){\r\n                        index = i;\r\n                        break;\r\n                    }\r\n            if(index !== -1)\r\n                this.frames[index] = { frame: null, free: true };\r\n        }\r\n        if(index)\r\n            this.frames[index] = { frame: null, free: true };\r\n    }\r\n\r\n    /**\r\n     * Return the index of the oldest frame\r\n     * @param oldest - The oldest frame\r\n     * @returns Index of the oldest frame\r\n     */\r\n    public getOldest(oldest: number): number {\r\n        for(let i = 0; i < this.size; i++)\r\n            if(this.frames[i].frame.age < this.frames[oldest].frame.age)\r\n                return i;\r\n         return oldest;\r\n    }\r\n\r\n    /**\r\n     * Check if the memory is full\r\n     * @returns true if the pafe is full, false otherwise\r\n     */\r\n    public isFull(): boolean {\r\n        let band = false;\r\n        for(let i = 0; i < this.size; band = band || this.frames[i].free, i++);\r\n        return !band\r\n    }\r\n\r\n    public toString() : string{\r\n        let cad = '';\r\n        this.frames.forEach(x => {\r\n            if(x.free)\r\n                cad += ' # |';\r\n            else\r\n                if(x.frame.referenced_bit)\r\n                    cad += ` (${x.frame.process_pid}-${x.frame.process_page}) |`;\r\n                else\r\n                    cad += ` ${x.frame.process_pid}-${x.frame.process_page} |`;\r\n        });\r\n        return cad;\r\n    }\r\n\r\n}","export default class Process {\r\n\r\n    PID             : string;\r\n    references      : number[];\r\n    computed_time   : number;\r\n    total_time      : number;\r\n    number_of_pages : number;\r\n\r\n    /**\r\n     * Creates an instance of a single process\r\n     * @param pid - The PID of the process\r\n     * @param total_time - The total time to be computed\r\n     * @param number_of_pages - The number of pages that contains\r\n     * @param references - The list of page references to do.\r\n     */\r\n    constructor(pid : string, total_time : number, number_of_pages : number, references? : number[] ){\r\n        this.PID                = pid;\r\n        this.total_time         = total_time;\r\n        this.number_of_pages    = number_of_pages;\r\n        this.references         = references || this.createRandomReferences();\r\n        this.computed_time      = 0;\r\n    }\r\n\r\n    /**\r\n     * Create random references based on the number of pages that process had\r\n     * @returns An array of numbers that represents references\r\n     */\r\n    private createRandomReferences() : number[] {\r\n        const refs : number[] = [];\r\n        for(let i = 0; i < this.total_time; i++)\r\n            refs.push(Math.round(Math.random() * this.number_of_pages - 1));\r\n        return refs;\r\n    }\r\n\r\n    /**\r\n     * Get the next reference from the list of references\r\n     * @returns The next page number to be referenced\r\n     */\r\n    public nextReference() : number {\r\n        const temp = this.references.reverse();\r\n        const element = temp.pop();\r\n        this.references = temp.reverse();\r\n        return element;\r\n    }\r\n\r\n    /**\r\n     * Check if the process computed time  is equals the total time\r\n     */\r\n    public hasFinished() : boolean {\r\n        return this.total_time <= this.computed_time;\r\n    }\r\n\r\n    public toString() : string {\r\n        return 'PID: ' + this.PID + '\\nReferencias: ' + this.references.join(', ');\r\n    }\r\n\r\n}\r\n","import JobQueue from \"./job_queue\";\r\nimport Process from \"./process\";\r\n\r\nexport default class RoundRobin {\r\n\r\n    job_queue       : JobQueue;\r\n    current_process : Process;\r\n    quantum         : number;\r\n    computed_time   : number;\r\n\r\n    /**\r\n     * Creates an Round Robin scheduler for process.\r\n     * @param job_queue - The queue of process for be scheduling\r\n     * @param quantum - The unit of time\r\n     */\r\n    constructor(job_queue : JobQueue, quantum : number){\r\n        this.job_queue = job_queue;\r\n        this.current_process = null;\r\n        this.quantum = quantum;\r\n        this.computed_time = 0;\r\n    }\r\n\r\n    /**\r\n     * Get the next process to be computed\r\n     * @returns The next process, null if there are no process\r\n     */\r\n    public nextProcessToCompute() : Process | null {\r\n        this.current_process = this.job_queue.choseProcess();\r\n        this.computed_time = 0;\r\n        return this.current_process;\r\n    }\r\n\r\n    /**\r\n     * Updates the state of scheduler for know if has to change the process to be computed\r\n     */\r\n    public tick() : boolean {\r\n        if(this.current_process === null) return true;\r\n        if(++this.current_process.computed_time > this.current_process.total_time ||\r\n            ++this.computed_time >= this.quantum) return true;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Add a process to the job queue\r\n     * @param process - The process to be added to scheduler\r\n     */\r\n    public registerProcess(process : Process): void {\r\n        this.job_queue.registerProcess(process);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param pid - The PID of the process to be removed from the job queue\r\n     */\r\n    public deleteProcess(pid : string) : void {\r\n        this.job_queue.deleteProcess(pid);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","/**\r\n * @namespace page\r\n */\r\n\r\n/**\r\n * Interface for control the pages structure.\r\n * @interface \r\n * @field free -  For know if the page is free.\r\n * @field page - The page information.\r\n */\r\nexport interface IPage {\r\n    free : boolean;\r\n    page : Page;\r\n}\r\n\r\nexport class Page {\r\n    page_number     : number;\r\n    process_pid     : string;\r\n    process_page    : number;\r\n\r\n    /**\r\n     * Creates an instance of Page.\r\n     * @param page_number - The number of page in memory.\r\n     * @param size - The size of the page.\r\n     * @param unit - The unit of the page.\r\n     * @param pid - The PID of the process that page contains.\r\n     * @param page - The page of the process that page contains.\r\n     */\r\n    constructor(page_number : number, size : number, unit : string, pid : string, page : number){\r\n        this.page_number    = page_number;\r\n        this.process_pid    = pid;\r\n        this.process_page   = page;\r\n    }\r\n\r\n}","import { Page, IPage } from \"./page\";\r\nimport Process from \"./process\";\r\n\r\n/** Class representing the virtual memory\r\n */\r\nexport default class VirtualMemory {\r\n\r\n    size    : number;\r\n    unit    : string;\r\n    offset  : number;\r\n    pages   : IPage[];\r\n    free_p  : number;\r\n\r\n    /**\r\n     * Create a instance of virtual_memory\r\n     * @param {number} page_size - the size of all pages\r\n     * @param number_of_pages - the total number of pages\r\n     * @param unit - the unit of all pages.\r\n     */\r\n    constructor(page_size : number, number_of_pages : number, unit : string){\r\n        this.size       = page_size * number_of_pages;\r\n        this.unit       = unit;\r\n        this.pages      = [];\r\n        this.free_p     = number_of_pages;\r\n        this.initPages();\r\n    }\r\n\r\n    /**\r\n     * Start each page state as blank page and free for use.\r\n     */\r\n    private initPages() : void {\r\n        for(let i = 0; i < this.free_p; i++){\r\n            this.pages[i] = {\r\n                free : true,\r\n                page : null\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Try to load a process depends on free pages.\r\n     * @param process - the process to be loaded\r\n     * @returns {boolean} false if the process cannot be loaded, true otherwise\r\n     */\r\n    public loadProcess(process : Process) : boolean {\r\n        if(process.number_of_pages > this.free_p) return false;\r\n        let process_pages = 0;\r\n        console.log('!!@@', process.number_of_pages);\r\n        for(let i = 0; i < this.pages.length; i++){\r\n            if(process_pages === process.number_of_pages) break;\r\n            if(this.pages[i].free){\r\n                console.log('^^^^', process_pages);\r\n                this.pages[i].page = new Page(i, 4, 'kb', process.PID, process_pages++);\r\n                this.pages[i].free = false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the virtual memory is full, flase otherwise\r\n     */\r\n    public isFull() : boolean { return this.free_p === 0; }\r\n\r\n    /**\r\n     * Delete all process pages from virtual memory\r\n     * @param {string} pid - The PID of the process to be deleted.\r\n     */\r\n    public deleteProcess(pid: string): void {\r\n        for(let i = 0; i < this.pages.length; i++)\r\n            if(!this.pages[i].free)\r\n                if(this.pages[i].page.process_pid === pid)\r\n                    this.pages[i] = {free : true, page : null};\r\n    }\r\n\r\n    /**\r\n     * Check if the process is loaded in virtual memory\r\n     * @param pid\r\n     * @returns true if the process is in virtual memory, false otherwise\r\n     */\r\n    public hasProcess(pid : string) : boolean {\r\n        for(let i = 0; i < this.pages.length; i++)\r\n            if(!this.pages[i].free)\r\n                if(this.pages[i].page.process_pid === pid) return true;\r\n        return false;\r\n    }\r\n\r\n    public toString() : string {\r\n        let cad = \"\";\r\n        this.pages.map(x => {\r\n            if(x.free)\r\n                cad += \" # |\"\r\n            else\r\n                cad += x.page.process_pid + \"-\" + x.page.process_page + ' |';\r\n        });\r\n        return cad;\r\n    }\r\n\r\n}","import VirtualMemory from './virtual_memory';\r\nimport PhysicalMemory from './physical_memory';\r\nimport Process from './process';\r\nimport MMU from './mmu';\r\n\r\nexport default class WorkingSetR implements MMU {\r\n\r\n\tvirtual\t\t\t: VirtualMemory;\r\n\tphysical\t\t: PhysicalMemory;\r\n\tcapacity\t\t: number;\r\n\tworking_set\t\t: string[];\r\n\r\n\t/**\r\n\t * Creates a working set algorithm\r\n\t * @param virtual - An instance of virtual memory\r\n\t * @param physical - An instance of physical memory\r\n\t * @param window_size - The number of slots in working set\r\n\t */\r\n\tconstructor(virtual: VirtualMemory, physical: PhysicalMemory, window_size: number){\r\n\t\tthis.virtual \t\t= virtual;\r\n\t\tthis.physical \t\t= physical;\r\n\t\tthis.working_set \t= [];\r\n\t\tthis.capacity \t\t= window_size;\r\n\t}\r\n\r\n\t/**\r\n\t * Load a process to virtual memory\r\n\t * @param process - The process to be loaded\r\n\t * @returns true if the process can be loaded, false otherwise\r\n\t */\r\n\tpublic loadProcess(process: Process): boolean {\r\n\t\treturn this.virtual.loadProcess(process);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a process form virtual and physical memory\r\n\t * @param pid - The PID of the process to be removed\r\n\t */\r\n\tpublic deleteProcess(pid: string): void {\r\n\t\tthis.virtual.deleteProcess(pid);\r\n\t\tthis.physical.deleteProcess(pid);\r\n\t}\r\n\r\n\t/**\r\n\t * Reference a process based on working set algorithm\r\n\t * @param pid - The PID of the process to be referenced\r\n\t * @param page - The page of the process to be referenced\r\n\t * @returns true if exist page fault, false otherwise\r\n\t */\r\n\tpublic referenceProcess(pid: string, page: number): boolean {\r\n\t\tlet fault = false;\r\n\t\tconst referenced = `${pid}-${page}`;\r\n\t\tif(this.working_set.indexOf(referenced) !== -1){\r\n\t\t\tthis.working_set = this.working_set.filter(x => x !== referenced);\r\n\t\t\tthis.working_set.push(referenced);\r\n\t\t} else {\r\n\t\t\tif(this.working_set.length >= this.capacity){\r\n\t\t\t\tthis.working_set = this.working_set.slice(1);\r\n\t\t\t\tthis.working_set.push(referenced);\r\n\t\t\t} else {\r\n\t\t\t\tthis.working_set.push(referenced);\r\n\t\t\t}\r\n\t\t\tfault = true;\r\n\t\t}\r\n\t\tif(!this.physical.hasProcessPage(pid, page)){\r\n\t\t\tif(this.physical.isFull()){\r\n\t\t\t\tfor(const frame of this.physical.frames){\r\n\t\t\t\t\tif(frame.frame)\r\n\t\t\t\t\t\tif(this.working_set.indexOf(`${frame.frame.process_pid}-${frame.frame.process_page}`) !== -1){\r\n\t\t\t\t\t\t\tthis.physical.releaseFrame(frame.frame.process_pid, frame.frame.process_page);\r\n\t\t\t\t\t\t\tthis.physical.loadPage(pid, page);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.physical.loadPage(pid, page);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn fault;\r\n\t}\r\n\r\n}","import VirtualMemory from './virtual_memory';\r\nimport PhysicalMemory from './physical_memory';\r\nimport Process from './process';\r\nimport MMU from './mmu';\r\n\r\nexport default class WSClock implements MMU {\r\n\r\n\tvirtual\t\t\t: VirtualMemory;\r\n\tphysical\t\t: PhysicalMemory;\r\n\r\n\tvirtual_time\t: number;\r\n\trefresh\t\t\t: number;\r\n\tinterrupt\t\t: number;\r\n\toldest \t\t\t: number;\r\n\r\n\ttau\t\t\t\t: number;\r\n\r\n\t/**\r\n\t * Create an instance of WSClock algorithm\r\n\t * @param virtual - an instance of virtual memory\r\n\t * @param physical - an instance of physical memory\r\n\t * @param refresh_rate\r\n\t * @param tau\r\n\t */\r\n\tconstructor(virtual: VirtualMemory, physical: PhysicalMemory, refresh_rate: number,\r\n\t\t\t\ttau: number){\r\n\t\tthis.virtual \t\t= virtual;\r\n\t\tthis.physical \t\t= physical;\r\n\r\n\t\tthis.refresh \t\t= refresh_rate;\r\n\t\tthis.interrupt \t\t= 0;\r\n\t\tthis.virtual_time \t= 0;\r\n\t\tthis.oldest \t\t= 0;\r\n\r\n\t\tthis.tau \t\t\t= tau;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a process to virtual memory\r\n\t * @param process - The process to load\r\n\t */\r\n\tpublic loadProcess(process: Process): boolean {\r\n\t\treturn this.virtual.loadProcess(process);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a process from virtual an physical memory\r\n\t * @param pid - The pid of the process to be deleted\r\n\t */\r\n\tdeleteProcess(pid: string): void {\r\n\t\tthis.virtual.deleteProcess(pid);\r\n\t\tthis.physical.deleteProcess(pid);\r\n\t}\r\n\r\n\t/**\r\n\t * Update the state of algorithm\r\n\t */\r\n\tpublic tick(): void {\r\n\t\tthis.interrupt = this.interrupt + 1 % this.refresh;\r\n\t\tif(this.interrupt == 0)\r\n\t\t\tfor(let i = 0; i < this.physical.size; i++)\r\n\t\t\t\tthis.physical.frames[i].frame.reference(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Make a reference of specific page process\r\n\t * @param pid - The PID of the process to be referenced\r\n\t * @param page - The page of the process to be referenced\r\n\t */\r\n\tpublic referenceProcess(pid: string, page: number): boolean {\r\n\t\tlet fault = false;\r\n\t\tthis.virtual_time++;\r\n\t\tlet frameLocation = this.physical.getFrame(pid, page);\r\n\t\tif(frameLocation === -1){ //Si la pagina NO esta esta en memoria\r\n\t\t\tif(this.physical.isFull()){ //Si la memoria esta llena\r\n\t\t\t\tfault = true;\r\n\t\t\t\tlet looking = true;\r\n\t\t\t\tlet current = this.oldest;\r\n\t\t\t\tlet index = 0;\r\n\t\t\t\twhile(index < this.physical.size && looking){\r\n\t\t\t\t\tif(!this.physical.frames[current].frame.isReferenced() &&\r\n\t\t\t\t\t\t!this.physical.frames[current].frame.isDirty()){\r\n\t\t\t\t\t\t\t\tthis.update(current, pid, page);\r\n\t\t\t\t\t\t\t\tlooking = false;\r\n\t\t\t\t\t\t\t\tframeLocation = current;\r\n\t\t\t\t\t} else if(!this.physical.frames[current].frame.isReferenced() &&\r\n\t\t\t\t\t\tthis.physical.frames[current].frame.isDirty() &&\r\n\t\t\t\t\t\tthis.virtual_time - this.physical.frames[current].frame.age < this.tau){\r\n\t\t\t\t\t\t\tthis.physical.frames[current].frame.dirt(false);\r\n\t\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrent = (current + 1) % this.physical.size;\r\n\t\t\t\t}\r\n\t\t\t\tif(looking){\r\n\t\t\t\t\tif(this.physical.frames[this.oldest].frame.isDirty())\r\n\t\t\t\t\t\tthis.update(this.oldest, pid, page);\r\n\t\t\t\t\tframeLocation = this.oldest;\r\n\t\t\t\t}\r\n\t\t\t\tthis.oldest = this.physical.getOldest(this.oldest);\r\n\t\t\t} else { //Si la memoria no esta llena\r\n\t\t\t\tfault = true;\r\n\t\t\t\tthis.physical.loadPage(pid, page);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.update(frameLocation, pid, page);\r\n\t\t}\r\n\t\treturn fault;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the state of an specific process page\r\n\t * @param index - The index of memory to be updated\r\n\t * @param pid - The PID of the process to be updated\r\n\t * @param page - The page of the process to be upfated\r\n\t */\r\n\tpublic update(index: number, pid: string, page: number) : void {\r\n\t\tthis.physical.updateFrame(index, pid, page, this.virtual_time);\r\n\t}\r\n\r\n}","// eslint-disable-file no-use-before-define\r\n\r\n/**\r\n * @author Edgar Castro Martinez\r\n */\r\n\r\nimport FIFO from './fifo';\r\nimport JobQueue from './job_queue';\r\nimport Loader, { IProcessInput } from './loader';\r\nimport MMU from './mmu';\r\nimport PhysicalMemory from './physical_memory';\r\nimport Process from './process';\r\nimport RoundRobin from './rr_scheduler';\r\nimport VirtualMemory from './virtual_memory';\r\nimport WorkingSetR from './working_set';\r\nimport WSClock from './wsclock';\r\n\r\nexport default class CPU {\r\n\r\n    // Scheduler\r\n    loader              : Loader;\r\n    quantum             : number;\r\n    scheduler           : RoundRobin;\r\n\r\n    //MMU\r\n    virtual             : VirtualMemory;\r\n    physical            : PhysicalMemory;\r\n    mmu                 : MMU\r\n\r\n    //Variables for control and info.\r\n    computed_time       : number;\r\n    computed_process    : Process;\r\n    current_reference   : number;\r\n    total_processes     : number;\r\n    completed_processes : number;\r\n    ended               : boolean;\r\n    faults              : number\r\n    error_message       : string;\r\n\r\n    /**\r\n     * Creates an instance of CPU\r\n     * @constructor\r\n     * @param { IProcessInput[] } processes - List of proceeses to be computed\r\n     * @param { number } physical_size - Number of pages physical memory\r\n     * @param { number } virtual_size - Size of virtual memory\r\n     * @param { number } quantum - Quantum unit\r\n     * @param { string } algorithm - Name of page replacement agorithm to be executed.\r\n     * @param { number } opt1 - For working set algorithm, is the size of working set window. For WSClock is the refresh time\r\n     * @param { number } opt2 - Only for WSClock, is tau unit.\r\n     */\r\n    constructor(processes: IProcessInput[], physical_size: number, virtual_size: number,\r\n            quantum: number, algorithm: string, opt1?: number, opt2?: number){\r\n\r\n        this.loader              = new Loader(processes);\r\n        this.quantum             = quantum;\r\n        this.scheduler           = new RoundRobin(new JobQueue(), this.quantum);\r\n\r\n        this.physical            = new PhysicalMemory(physical_size);\r\n        this.virtual             = new VirtualMemory(4, virtual_size, 'mb');\r\n        if(algorithm === 'Fifo')\r\n            this.mmu             = new FIFO(this.virtual, this.physical);\r\n        else if(algorithm === 'Set')\r\n            this.mmu             = new WorkingSetR(this.virtual, this.physical, opt1);\r\n        else\r\n            this.mmu             = new WSClock(this.virtual, this.physical, opt1, opt2);\r\n\r\n        this.computed_time       = 0;\r\n        this.computed_process    = this.scheduler.nextProcessToCompute();\r\n        this.current_reference   = -1;\r\n        this.total_processes     = this.loader.input.length;\r\n        this.completed_processes = 0;\r\n        this.ended               = false;\r\n        this.faults              = 0;\r\n        this.error_message       = '';\r\n    }\r\n\r\n    // public next(): boolean {\r\n    //     this.error_message = '';\r\n    //     const nextToArrive = this.loader.tick(this.computed_time);\r\n    //     //Load new process\r\n    //     if(nextToArrive.length > 0){\r\n    //         nextToArrive.forEach(e => {\r\n    //             const temp = new Process(e.pid, e.total_time, e.pages, e.references)\r\n    //             this.scheduler.registerProcess(temp);\r\n    //             if(!this.mmu.loadProcess(temp)) this.error_message =\r\n    //                     `No se pudo cargar el proceso ${temp.PID} porque la memoria esta llena`;\r\n    //         });\r\n    //     }\r\n    //     //Chose a process\r\n    //     if(this.computed_process === null)\r\n    //         this.computed_process = this.scheduler.nextProcessToCompute();\r\n    //     if(!this.scheduler.tick()){\r\n    //         if(this.computed_process.hasFinished()) this.deleteProcess();\r\n    //         this.computed_process = this.scheduler.nextProcessToCompute();\r\n    //         if(this.hasFinishedTasks()) return false;\r\n    //     }\r\n    //     this.current_reference = this.computed_process.nextReference()\r\n    //     if(this.mmu.referenceProcess(this.computed_process.PID, this.current_reference)) this.faults++;\r\n    //     this.computed_time++;\r\n    //     return true;\r\n    // }\r\n\r\n\r\n    public next(): string {\r\n        this.error_message = '';\r\n        const nextToArrive = this.loader.tick(this.computed_time);\r\n        //Load new process\r\n        if(nextToArrive.length > 0){\r\n            nextToArrive.forEach(e => {\r\n                const temp = new Process(e.pid, e.total_time, e.pages, e.references)\r\n                this.scheduler.registerProcess(temp);\r\n                if(!this.mmu.loadProcess(temp)) this.error_message =\r\n                        `No se pudo cargar el proceso ${temp.PID} porque la memoria esta llena`;\r\n            });\r\n        }\r\n        //Chose a process\r\n        if(this.computed_process === null)\r\n            this.computed_process = this.scheduler.nextProcessToCompute();\r\n            if(this.computed_process === null && this.completed_processes !== this.loader.input.length) {\r\n                this.computed_time++;\r\n                return 'W';\r\n            }\r\n        if(!this.scheduler.tick()){\r\n            this.current_reference = this.computed_process.nextReference()\r\n            if(this.mmu.referenceProcess(this.computed_process.PID, this.current_reference)) this.faults++;\r\n            if(this.computed_process.hasFinished()) this.deleteProcess();\r\n            this.computed_process = this.scheduler.nextProcessToCompute();\r\n            if(this.hasFinishedTasks()) return 'F';\r\n        }\r\n        this.computed_time++;\r\n        return 'R';\r\n    }\r\n\r\n\r\n    private deleteProcess() : void {\r\n        this.completed_processes++;\r\n        const pid = this.computed_process.PID;\r\n        this.mmu.deleteProcess(pid);\r\n        this.scheduler.deleteProcess(pid);\r\n        console.log(`Se elimino el proceso ${pid}`)\r\n    }\r\n\r\n    public hasFinishedTasks() : boolean {\r\n        const hasComputed = this.computed_process === null;\r\n        const hasInWait = this.completed_processes === this.loader.input.length ;\r\n        return hasComputed && hasInWait;\r\n    }\r\n\r\n    public getError(): string { return this.error_message; }\r\n\r\n}\r\n","\r\nimport { computed, defineComponent, inject, onMounted, ref } from 'vue';\r\nimport Button from '@/components/Button/Button.vue';\r\nimport InfoPanel from '@/components/InfoPanel/InfoPanel.vue';\r\nimport Table from '@/components/Table/Table.vue';\r\nimport ConfirmModal from '@/components/ConfirmModal/ConfirmModal.vue';\r\nimport Modal from '@/components/Modal/Modal.vue'\r\nimport Settings from '@/components/Settings/Settings.vue';\r\n\r\nimport CPU from '@/model/cpu';\r\n\r\nexport default defineComponent({\r\n    components:{\r\n        Button,\r\n        InfoPanel,\r\n        Table,\r\n        ConfirmModal,\r\n        Modal,\r\n        Settings\r\n        // HorizontalTable,\r\n    },\r\n    props: {\r\n        inputArray: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        virtualSize: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        physicalSize: {\r\n            type: Number,\r\n            rquired: true\r\n        },\r\n        opt1: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        },\r\n        opt2: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        }\r\n    },\r\n    setup(props) {\r\n        const settings = inject('settings');\r\n\r\n        const lista: string[] = [];\r\n        const cpu = ref<CPU>();\r\n\r\n        const message = ref<string>('');\r\n\r\n        const modal_open = ref(false);\r\n        const settings_modal = ref(false);\r\n\r\n        const openModal = () => {\r\n            modal_open.value = true;\r\n        }\r\n\r\n        const closeModal = () => {\r\n            modal_open.value = false\r\n        }\r\n\r\n        const openSettings = () => settings_modal.value = true;\r\n        const closeSettings = () => {\r\n            settings_modal.value = false;\r\n            //@ts-ignore\r\n            localStorage.setItem('settings', JSON.stringify(settings.settings));\r\n            console.log('Si se pudo o puro pedo?')\r\n        }\r\n\r\n        const faults = computed(() => {\r\n            if(cpu.value === undefined) return 0;\r\n            if(cpu.value.faults !== null)\r\n                return cpu.value.faults;\r\n            return 0;\r\n        });\r\n\r\n        const current = computed((): string => {\r\n            if(cpu.value === undefined) return ''\r\n            if(cpu.value.computed_process !== null)\r\n                return `${cpu.value.computed_process.PID}-${cpu.value.current_reference}`;\r\n            return ''\r\n        });\r\n\r\n        const completed = computed((): string => {\r\n            if(cpu.value === undefined) return '-/-';\r\n            return `${cpu.value.completed_processes}/${cpu.value.total_processes}`;\r\n        });\r\n\r\n        const processQueue = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.scheduler.job_queue.queue.map(x => `${x.PID}`)\r\n        });\r\n\r\n        const virtualMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.virtual.pages.map((x) => (!x.free ? `${x.page.process_pid}-${x.page.process_page}` : ' '));\r\n        });\r\n\r\n        const physicalMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.physical.frames.map((x) => (!x.free ? `${x.frame.process_pid}-${x.frame.process_page}` : ' '));\r\n        });\r\n\r\n        const oldest = computed((): number => {\r\n            if(cpu.value === undefined) return -1;\r\n            return cpu.value.mmu.getOldest();\r\n        })\r\n\r\n        const nextStep = () => {\r\n            console.log(cpu.value.next());\r\n            console.log('Boton')\r\n            const temp = cpu.value.getError();\r\n            if(temp.length > 0){\r\n                message.value = temp;\r\n                setTimeout(() => {\r\n                    message.value = '';\r\n                }, 3000);\r\n            }\r\n\r\n        }\r\n\r\n        function initCPU(){\r\n            //@ts-ignore\r\n            cpu.value = new CPU(JSON.parse(props.inputArray), props.physicalSize, props.virtualSize, \r\n                                //@ts-ignore\r\n                                settings.getters.getQuantum(), 'Fifo', props.opt1, props.opt2);\r\n            console.log('___', cpu.value);\r\n        }\r\n\r\n        onMounted(initCPU);\r\n\r\n        return {\r\n            lista,\r\n            cpu,\r\n            message,\r\n            modal_open,\r\n            settings_modal,\r\n            openModal,\r\n            closeModal,\r\n            openSettings,\r\n            closeSettings,\r\n            faults,\r\n            current,\r\n            nextStep,\r\n            completed,\r\n            processQueue,\r\n            virtualMemory,\r\n            physicalMemory,\r\n            oldest,\r\n            settings,\r\n        }\r\n    }\r\n});\r\n","import { render } from \"./Fifo.vue?vue&type=template&id=0db358d3\"\nimport script from \"./Fifo.vue?vue&type=script&lang=ts\"\nexport * from \"./Fifo.vue?vue&type=script&lang=ts\"\n\nimport \"./Fifo.vue?vue&type=style&index=0&id=0db358d3&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"test-container\">\r\n        <Table\r\n            :listIterable=\"['1', '2', '3', '4']\"\r\n            :selected=\"2\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport Table from \"@/components/Table/Table.vue\";\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        Table,\r\n    },\r\n    setup() {\r\n        return {\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.test-container {\r\n    width: 70%;\r\n    height: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n</style>","\r\nimport { defineComponent } from \"vue\";\r\nimport Table from \"@/components/Table/Table.vue\";\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        Table,\r\n    },\r\n    setup() {\r\n        return {\r\n        }\r\n    }\r\n})\r\n","import { render } from \"./Test.vue?vue&type=template&id=3348ddef&scoped=true\"\nimport script from \"./Test.vue?vue&type=script&lang=ts\"\nexport * from \"./Test.vue?vue&type=script&lang=ts\"\n\nimport \"./Test.vue?vue&type=style&index=0&id=3348ddef&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-3348ddef\"\n\nexport default script","<template>\r\n    <div class=\"fifo\">\r\n        <div class=\"fifo-blur\" :class=\"{ blur: modal_open || settings_modal }\">\r\n            <div class=\"fifo__main\">\r\n                <div class=\"fifo__main__info\">\r\n                    <div class=\"info-panel\">\r\n                        <InfoPanel\r\n                            :current=\"current\"\r\n                            :completed=\"completed\"\r\n                            :pageFaults=\"faults\"\r\n                        />\r\n                    </div>\r\n                    <Table class=\"process-queue\"\r\n                        :title=\"'Procesos'\"\r\n                        :listIterable=\"processQueue\"\r\n                    />\r\n                </div>\r\n                <div class=\"fifo__main__center\">\r\n                    <div class=\"message\" v-if=\"message.length > 0\">{{message}}</div>\r\n                    <CircleTable\r\n                        :iterableList=\"physicalMemory\"\r\n                        :slots=\"5\"\r\n                        :radius=\"settings.getters.getFontSize() * 16\"\r\n                    />\r\n                </div>\r\n                <div class=\"fifo__main__lat\">\r\n                    <Table\r\n                        :listIterable=\"virtualMemory\"\r\n                        :title=\"'Memoria virtual'\"\r\n                        :slots=\"virtualSize\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div class=\"fifo__buttons\">\r\n                <Button\r\n                    :icon=\"'leave'\"\r\n                    :onClickFunction=\"openModal\"\r\n                    :expand=\"true\"\r\n                    :round=\"true\"\r\n                    :size=\"settings.getters.getFontSize() * 1.2\"\r\n                />\r\n                <div class=\"action-btns\">\r\n                    <!-- <Button\r\n                        :onClickFunction=\"nextStep\"\r\n                        :icon=\"'prev'\"\r\n                        :round=\"true\"\r\n                        :expand=\"true\"\r\n                        :size=\"24\"\r\n                    />\r\n                    <Button\r\n                        :onClickFunction=\"nextStep\"\r\n                        :icon=\"'play'\"\r\n                        :round=\"true\"\r\n                        :expand=\"true\"\r\n                        :size=\"24\"\r\n                    /> -->\r\n                    <Button\r\n                        :onClickFunction=\"nextStep\"\r\n                        :icon=\"'next'\"\r\n                        :round=\"true\"\r\n                        :expand=\"true\"\r\n                        :size=\"settings.getters.getFontSize() * 1.2\"\r\n                    />\r\n                </div>\r\n                <Button class=\"btn-sett\"\r\n                    :icon=\"'settings'\"\r\n                    :round=\"true\"\r\n                    :expand=\"true\"\r\n                    :size=\"settings.getters.getFontSize() * 1.2\"\r\n                    :onClickFunction=\"openSettings\"\r\n                />\r\n            </div>\r\n        </div>\r\n        <ConfirmModal \r\n            :showing=\"modal_open\"\r\n            @update:showing=\"modal_open\"\r\n            @close=\"closeModal\"\r\n        >\r\n            ¿Esta seguro que desea salir <br>\r\n            Al salir perdera el estado actual del simulador al igual que al informacion de los procesos de entrada\r\n        </ConfirmModal>\r\n        <Modal\r\n            :showing=\"settings_modal\"\r\n            @update:showing=\"settings_modal\"\r\n            @close=\"closeSettings\"\r\n        >\r\n            <Settings />\r\n        </Modal>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, inject, onMounted, ref } from 'vue';\r\nimport Button from '@/components/Button/Button.vue';\r\nimport InfoPanel from '@/components/InfoPanel/InfoPanel.vue';\r\nimport Table from '@/components/Table/Table.vue';\r\nimport CircleTable from '@/components/CircleTable/CircleTable.vue';\r\nimport ConfirmModal from '@/components/ConfirmModal/ConfirmModal.vue';\r\nimport Modal from '@/components/Modal/Modal.vue'\r\nimport Settings from '@/components/Settings/Settings.vue';\r\n\r\nimport CPU from '@/model/cpu';\r\n\r\nexport default defineComponent({\r\n    components:{\r\n        Button,\r\n        InfoPanel,\r\n        Table,\r\n        CircleTable,\r\n        ConfirmModal,\r\n        Modal,\r\n        Settings,\r\n    },\r\n    props: {\r\n        inputArray: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        virtualSize: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        physicalSize: {\r\n            type: Number,\r\n            rquired: true\r\n        },\r\n        opt1: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        },\r\n        opt2: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        },\r\n    },\r\n    setup(props) {\r\n        const settings = inject('settings');\r\n\r\n        const lista: string[] = [];\r\n        const cpu = ref<CPU>();\r\n\r\n        const message = ref<string>('');\r\n\r\n        const modal_open = ref(false);\r\n        const settings_modal = ref(false);\r\n\r\n        const openModal = () => { \r\n            modal_open.value = true;\r\n        }\r\n\r\n        const closeModal = () => { \r\n            modal_open.value = false \r\n        }\r\n\r\n        const openSettings = () => settings_modal.value = true;\r\n        const closeSettings = () => {\r\n            settings_modal.value = false;\r\n            //@ts-ignore\r\n            localStorage.setItem('settings', JSON.stringify(settings.settings));\r\n            console.log('Si se pudo o puro pedo?')\r\n        }\r\n\r\n        const faults = computed(() => {\r\n            if(cpu.value === undefined) return 0;\r\n            if(cpu.value.faults !== null) \r\n                return cpu.value.faults;\r\n            return 0;\r\n        });\r\n\r\n        const current = computed((): string => {\r\n            if(cpu.value === undefined) return ''\r\n            if(cpu.value.computed_process !== null) \r\n                return `${cpu.value.computed_process.PID}-${cpu.value.current_reference}`;\r\n            return ''\r\n        });\r\n\r\n        const completed = computed((): string => {\r\n            if(cpu.value === undefined) return '-/-';\r\n            return `${cpu.value.completed_processes}/${cpu.value.total_processes}`;\r\n        });\r\n\r\n        const processQueue = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.scheduler.job_queue.queue.map(x => `${x.PID}`)\r\n        });\r\n\r\n        const virtualMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.virtual.pages.map((x) => (!x.free ? `${x.page.process_pid}-${x.page.process_page}` : ' '));\r\n        });\r\n\r\n        const physicalMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.physical.frames.map((x) => (!x.free ? `${x.frame.process_pid}-${x.frame.process_page} | ${(x.frame.referenced_bit) ? 1 : 0}` : ' '));\r\n        });\r\n\r\n        const workingSet = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.mmu.working_set;\r\n        });\r\n\r\n        const nextStep = () => {\r\n            cpu.value.next();\r\n            const temp = cpu.value.getError();\r\n            if(temp.length > 0){\r\n                message.value = temp;\r\n                setTimeout(() => {\r\n                    message.value = '';\r\n                }, 3000);\r\n            }\r\n        }\r\n\r\n        function initCPU(){\r\n            //@ts-ignore\r\n            cpu.value = new CPU(JSON.parse(props.inputArray), props.physicalSize, props.virtualSize, \r\n            //@ts-ignore\r\n                                settings.getters.getQuantum(), 'WS', props.opt1, props.opt2);\r\n            console.log('___', cpu.value);\r\n        }       \r\n         \r\n        onMounted(initCPU);\r\n\r\n        return {\r\n            settings,\r\n            lista,\r\n            cpu,\r\n            message,\r\n            modal_open,\r\n            settings_modal,\r\n            openModal,\r\n            closeModal,\r\n            openSettings,\r\n            closeSettings,\r\n            faults,\r\n            current,\r\n            nextStep,\r\n            completed,\r\n            processQueue,\r\n            virtualMemory,\r\n            physicalMemory,\r\n            workingSet,\r\n        }\r\n    }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './fifo';\r\n</style>","<template>\r\n    <div class=\"circle-table\">\r\n        <div class=\"circle-container\" :style=\"computedSize\">\r\n        </div>            \r\n        <!-- <div class=\"circle-arrow\" :style=\"computedStyle\"></div> -->\r\n        <div class=\"circle-slot\" v-for=\"(i, index) in iterList\" :key=\"index\" \r\n            :style=\"calcTranslate(index)\">\r\n            {{i}}\r\n        </div>\r\n        <!-- <div class=\"circle-slot\" v-for=\"i in freeSlots\" :key=\"slots - i\" \r\n            :style=\"calcTranslate(slots - freeSlots() - i)\">\r\n            #\r\n        </div> -->\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, onMounted, ref } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        slots: {\r\n            type: Number,\r\n            required: false,\r\n            default: 6,\r\n        },\r\n        radius: {\r\n            type: Number,\r\n            required: false,\r\n            default: 300,\r\n        },\r\n        offset: {\r\n            type: Number,\r\n            required: false,\r\n            default: 90,\r\n        },\r\n        pointTo: {\r\n            type: Number,\r\n            required: false,\r\n            default: 1,\r\n        },\r\n        iterableList: {\r\n            type: Array as () => string[],\r\n            required: true,\r\n        }\r\n    },\r\n    setup(props) {\r\n\r\n        const _offset = ref(0);\r\n\r\n        onMounted(() => {\r\n            //@ts-ignore\r\n            _offset.value = (180 - (360 / props.slots));\r\n        })\r\n\r\n        const calcDegrees = (index: number): number => {\r\n            //@ts-ignore\r\n            // return ((360 / props.slots) * index + props.offset) * (Math.PI / 180);\r\n            console.log(_offset.value);\r\n            //@ts-ignore\r\n            return ((360 / props.slots) * index - 90) * (Math.PI / 180);\r\n        }\r\n        \r\n        const calcCoords = (index: number) => {\r\n            //@ts-ignore\r\n            const xCoord = Math.cos(calcDegrees(index)) * (props.radius - 70);\r\n            //@ts-ignore(\r\n            const yCoord = Math.sin(calcDegrees(index)) * (props.radius - 70);\r\n            return [xCoord, yCoord];\r\n        }\r\n\r\n        const calcTranslate = (index: number) => {\r\n            const [xCoord, yCoord] = calcCoords(index);\r\n            return `transform: translate(${xCoord}px, ${yCoord}px);`\r\n        }\r\n\r\n        const toDeg = (deg: number) => {\r\n            return (deg * 180) / Math.PI;\r\n        }\r\n\r\n        const computedSize = computed(() => {\r\n            return {\r\n                //@ts-ignore\r\n                width: `${props.radius * 2}px`,\r\n                //@ts-ignore\r\n                height: `${props.radius * 2}px`\r\n            }\r\n        });\r\n\r\n        const computedStyle = computed(() => {\r\n            return {\r\n                // @ts-ignore\r\n                height: `calc(${props.radius}px / 2)`,\r\n                // @ts-ignore\r\n                transform: `rotateZ(${toDeg(calcDegrees(props.pointTo) + calcDegrees(20))}deg`\r\n            }\r\n        });\r\n\r\n        const freeSlots = () => {\r\n            //@ts-ignore \r\n            return props.slots - props.iterableList.length;\r\n        }\r\n\r\n        const iterList = computed(()  => {\r\n            const iter: string[] = [];\r\n            // @ts-ignore\r\n            for(let i = 0; i < props.iterableList.length; i++)\r\n            //@ts-ignore\r\n                iter.push(props.iterableList[i]);\r\n            const limit = freeSlots();\r\n            for(let i = 0; i < limit; i++)\r\n                iter.push(' ');\r\n            return iter;\r\n        })\r\n\r\n        return {\r\n            calcTranslate,\r\n            computedSize,\r\n            computedStyle,\r\n            freeSlots,\r\n            iterList,\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './circletable';\r\n</style>","\r\nimport { computed, defineComponent, onMounted, ref } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        slots: {\r\n            type: Number,\r\n            required: false,\r\n            default: 6,\r\n        },\r\n        radius: {\r\n            type: Number,\r\n            required: false,\r\n            default: 300,\r\n        },\r\n        offset: {\r\n            type: Number,\r\n            required: false,\r\n            default: 90,\r\n        },\r\n        pointTo: {\r\n            type: Number,\r\n            required: false,\r\n            default: 1,\r\n        },\r\n        iterableList: {\r\n            type: Array as () => string[],\r\n            required: true,\r\n        }\r\n    },\r\n    setup(props) {\r\n\r\n        const _offset = ref(0);\r\n\r\n        onMounted(() => {\r\n            //@ts-ignore\r\n            _offset.value = (180 - (360 / props.slots));\r\n        })\r\n\r\n        const calcDegrees = (index: number): number => {\r\n            //@ts-ignore\r\n            // return ((360 / props.slots) * index + props.offset) * (Math.PI / 180);\r\n            console.log(_offset.value);\r\n            //@ts-ignore\r\n            return ((360 / props.slots) * index - 90) * (Math.PI / 180);\r\n        }\r\n        \r\n        const calcCoords = (index: number) => {\r\n            //@ts-ignore\r\n            const xCoord = Math.cos(calcDegrees(index)) * (props.radius - 70);\r\n            //@ts-ignore(\r\n            const yCoord = Math.sin(calcDegrees(index)) * (props.radius - 70);\r\n            return [xCoord, yCoord];\r\n        }\r\n\r\n        const calcTranslate = (index: number) => {\r\n            const [xCoord, yCoord] = calcCoords(index);\r\n            return `transform: translate(${xCoord}px, ${yCoord}px);`\r\n        }\r\n\r\n        const toDeg = (deg: number) => {\r\n            return (deg * 180) / Math.PI;\r\n        }\r\n\r\n        const computedSize = computed(() => {\r\n            return {\r\n                //@ts-ignore\r\n                width: `${props.radius * 2}px`,\r\n                //@ts-ignore\r\n                height: `${props.radius * 2}px`\r\n            }\r\n        });\r\n\r\n        const computedStyle = computed(() => {\r\n            return {\r\n                // @ts-ignore\r\n                height: `calc(${props.radius}px / 2)`,\r\n                // @ts-ignore\r\n                transform: `rotateZ(${toDeg(calcDegrees(props.pointTo) + calcDegrees(20))}deg`\r\n            }\r\n        });\r\n\r\n        const freeSlots = () => {\r\n            //@ts-ignore \r\n            return props.slots - props.iterableList.length;\r\n        }\r\n\r\n        const iterList = computed(()  => {\r\n            const iter: string[] = [];\r\n            // @ts-ignore\r\n            for(let i = 0; i < props.iterableList.length; i++)\r\n            //@ts-ignore\r\n                iter.push(props.iterableList[i]);\r\n            const limit = freeSlots();\r\n            for(let i = 0; i < limit; i++)\r\n                iter.push(' ');\r\n            return iter;\r\n        })\r\n\r\n        return {\r\n            calcTranslate,\r\n            computedSize,\r\n            computedStyle,\r\n            freeSlots,\r\n            iterList,\r\n        }\r\n    }\r\n})\r\n","import { render } from \"./CircleTable.vue?vue&type=template&id=1ad0f693\"\nimport script from \"./CircleTable.vue?vue&type=script&lang=ts\"\nexport * from \"./CircleTable.vue?vue&type=script&lang=ts\"\n\nimport \"./CircleTable.vue?vue&type=style&index=0&id=1ad0f693&lang=scss\"\nscript.render = render\n\nexport default script","\r\nimport { computed, defineComponent, inject, onMounted, ref } from 'vue';\r\nimport Button from '@/components/Button/Button.vue';\r\nimport InfoPanel from '@/components/InfoPanel/InfoPanel.vue';\r\nimport Table from '@/components/Table/Table.vue';\r\nimport CircleTable from '@/components/CircleTable/CircleTable.vue';\r\nimport ConfirmModal from '@/components/ConfirmModal/ConfirmModal.vue';\r\nimport Modal from '@/components/Modal/Modal.vue'\r\nimport Settings from '@/components/Settings/Settings.vue';\r\n\r\nimport CPU from '@/model/cpu';\r\n\r\nexport default defineComponent({\r\n    components:{\r\n        Button,\r\n        InfoPanel,\r\n        Table,\r\n        CircleTable,\r\n        ConfirmModal,\r\n        Modal,\r\n        Settings,\r\n    },\r\n    props: {\r\n        inputArray: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        virtualSize: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        physicalSize: {\r\n            type: Number,\r\n            rquired: true\r\n        },\r\n        opt1: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        },\r\n        opt2: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        },\r\n    },\r\n    setup(props) {\r\n        const settings = inject('settings');\r\n\r\n        const lista: string[] = [];\r\n        const cpu = ref<CPU>();\r\n\r\n        const message = ref<string>('');\r\n\r\n        const modal_open = ref(false);\r\n        const settings_modal = ref(false);\r\n\r\n        const openModal = () => { \r\n            modal_open.value = true;\r\n        }\r\n\r\n        const closeModal = () => { \r\n            modal_open.value = false \r\n        }\r\n\r\n        const openSettings = () => settings_modal.value = true;\r\n        const closeSettings = () => {\r\n            settings_modal.value = false;\r\n            //@ts-ignore\r\n            localStorage.setItem('settings', JSON.stringify(settings.settings));\r\n            console.log('Si se pudo o puro pedo?')\r\n        }\r\n\r\n        const faults = computed(() => {\r\n            if(cpu.value === undefined) return 0;\r\n            if(cpu.value.faults !== null) \r\n                return cpu.value.faults;\r\n            return 0;\r\n        });\r\n\r\n        const current = computed((): string => {\r\n            if(cpu.value === undefined) return ''\r\n            if(cpu.value.computed_process !== null) \r\n                return `${cpu.value.computed_process.PID}-${cpu.value.current_reference}`;\r\n            return ''\r\n        });\r\n\r\n        const completed = computed((): string => {\r\n            if(cpu.value === undefined) return '-/-';\r\n            return `${cpu.value.completed_processes}/${cpu.value.total_processes}`;\r\n        });\r\n\r\n        const processQueue = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.scheduler.job_queue.queue.map(x => `${x.PID}`)\r\n        });\r\n\r\n        const virtualMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.virtual.pages.map((x) => (!x.free ? `${x.page.process_pid}-${x.page.process_page}` : ' '));\r\n        });\r\n\r\n        const physicalMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.physical.frames.map((x) => (!x.free ? `${x.frame.process_pid}-${x.frame.process_page} | ${(x.frame.referenced_bit) ? 1 : 0}` : ' '));\r\n        });\r\n\r\n        const workingSet = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.mmu.working_set;\r\n        });\r\n\r\n        const nextStep = () => {\r\n            cpu.value.next();\r\n            const temp = cpu.value.getError();\r\n            if(temp.length > 0){\r\n                message.value = temp;\r\n                setTimeout(() => {\r\n                    message.value = '';\r\n                }, 3000);\r\n            }\r\n        }\r\n\r\n        function initCPU(){\r\n            //@ts-ignore\r\n            cpu.value = new CPU(JSON.parse(props.inputArray), props.physicalSize, props.virtualSize, \r\n            //@ts-ignore\r\n                                settings.getters.getQuantum(), 'WS', props.opt1, props.opt2);\r\n            console.log('___', cpu.value);\r\n        }       \r\n         \r\n        onMounted(initCPU);\r\n\r\n        return {\r\n            settings,\r\n            lista,\r\n            cpu,\r\n            message,\r\n            modal_open,\r\n            settings_modal,\r\n            openModal,\r\n            closeModal,\r\n            openSettings,\r\n            closeSettings,\r\n            faults,\r\n            current,\r\n            nextStep,\r\n            completed,\r\n            processQueue,\r\n            virtualMemory,\r\n            physicalMemory,\r\n            workingSet,\r\n        }\r\n    }\r\n});\r\n","import { render } from \"./Clock.vue?vue&type=template&id=a33ae226\"\nimport script from \"./Clock.vue?vue&type=script&lang=ts\"\nexport * from \"./Clock.vue?vue&type=script&lang=ts\"\n\nimport \"./Clock.vue?vue&type=style&index=0&id=a33ae226&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n  <div class=\"home\">\r\n    <div class=\"blur-content-home\" :class=\"{ blur: settings_modal }\">\r\n      <div class=\"bg-icon\">\r\n        <Icon \r\n          :icon=\"'cpu'\"\r\n          :width=\"settings.getters.getFontSize() * 20\"\r\n          :height=\"settings.getters.getFontSize() * 20\"\r\n        />\r\n      </div>\r\n      <div class=\"bg-icon-s\">\r\n        <Icon \r\n          :icon=\"'monitor'\"\r\n          :width=\"settings.getters.getFontSize() * 20\"\r\n          :height=\"settings.getters.getFontSize() * 20\"\r\n        />\r\n      </div>\r\n      <div class=\"bg-circle\"></div>\r\n      <div class=\"bg-circle-s\"></div>\r\n      <main>\r\n        <div class=\"home__title\">\r\n          <div class=\"title__fac\">\r\n            Facultad de Ciencias de la Computación\r\n          </div>\r\n          <div class=\"title__sub\" :style=\"{ color: settings.getters.getColor() }\">\r\n            Sistemas Operativos II\r\n          </div>\r\n          <div class=\"title__theme\">\r\n            Algoritmos de remplazo de páginas\r\n          </div>\r\n        </div>\r\n        <nav class=\"btns\">\r\n          <router-link :to=\"{\r\n            name: 'Form',\r\n            params: { algorithm: 'fifo' }\r\n          }\" class=\"btn\" :style=\"{ color: settings.getters.getColor() }\">\r\n            FIFO\r\n            <Icon \r\n              :icon=\"'fifo'\" \r\n              :width=\"settings.getters.getFontSize()\" \r\n              :height=\"settings.getters.getFontSize() * 1.2\" \r\n              class=\"bt-i\"\r\n            />\r\n          </router-link>\r\n          <router-link :to=\"{\r\n            name: 'Form',\r\n            params: { algorithm: ws }\r\n          }\" class=\"btn\" :style=\"{ color: settings.getters.getColor() }\">\r\n            Working Set\r\n            <Icon \r\n              :icon=\"'w-set'\" \r\n              :width=\"settings.getters.getFontSize()\" \r\n              :height=\"settings.getters.getFontSize() * 1.2\" \r\n              class=\"bt-i\"\r\n            />\r\n          </router-link>\r\n          <router-link :to=\"{\r\n            name: 'Form',\r\n            params: { algorithm: 'wsclock' }\r\n          }\" class=\"btn\" :style=\"{ color: settings.getters.getColor() }\">\r\n            WSClock\r\n            <Icon \r\n              :icon=\"'clock'\" \r\n              :width=\"settings.getters.getFontSize()\" \r\n              :height=\"settings.getters.getFontSize() * 1.2\" \r\n              class=\"bt-i\"\r\n            />\r\n          </router-link>\r\n        </nav>\r\n      </main>\r\n      <footer>\r\n        <Button class=\"btn-sett\"\r\n          :icon=\"'settings'\"\r\n          :round=\"true\"\r\n          :expand=\"true\"\r\n          :size=\"settings.getters.getFontSize() * 1.2\"\r\n          :onClickFunction=\"openModal\"\r\n          :color=\"settings.getters.getColor()\"\r\n        />\r\n      </footer>\r\n    </div>\r\n    <Modal \r\n      :showing=\"settings_modal\"\r\n      @update:showing=\"settings_modal\"\r\n      @close=\"closeModal()\"\r\n    >\r\n      <Settings />\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, inject, ref } from 'vue';\r\nimport Button from '@/components/Button/Button.vue';\r\nimport Modal from '@/components/Modal/Modal.vue';\r\nimport Settings from '@/components/Settings/Settings.vue';\r\nimport Icon from '@/components/Icon/Icon.vue';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    Button,\r\n    Modal,\r\n    Settings,\r\n    Icon,\r\n  },\r\n  setup() {\r\n\r\n    const settings = inject('settings') as any;\r\n\r\n    const fifo = 'fifo';\r\n    const ws = 'ws';\r\n    const wsclock = 'wsclock'\r\n\r\n    const settings_modal = ref(false);\r\n    const openModal = () => settings_modal.value = true;\r\n    const closeModal = () => { \r\n      settings_modal.value = false;\r\n\t\t\t//@ts-ignore\r\n\t\t\tlocalStorage.setItem('app-settings', JSON.stringify(settings.settings));\r\n      console.log('Configuraciones actualizadas')\r\n    }\r\n\r\n    const changeTheme = () => {\r\n      settings.methods.toggleTheme();\r\n    }\r\n\r\n    return {\r\n      settings,\r\n      fifo, ws, wsclock,\r\n      changeTheme,\r\n      settings_modal,\r\n      openModal,\r\n      closeModal,\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './home';\r\n</style>\r\n","\r\nimport { defineComponent, inject, ref } from 'vue';\r\nimport Button from '@/components/Button/Button.vue';\r\nimport Modal from '@/components/Modal/Modal.vue';\r\nimport Settings from '@/components/Settings/Settings.vue';\r\nimport Icon from '@/components/Icon/Icon.vue';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    Button,\r\n    Modal,\r\n    Settings,\r\n    Icon,\r\n  },\r\n  setup() {\r\n\r\n    const settings = inject('settings') as any;\r\n\r\n    const fifo = 'fifo';\r\n    const ws = 'ws';\r\n    const wsclock = 'wsclock'\r\n\r\n    const settings_modal = ref(false);\r\n    const openModal = () => settings_modal.value = true;\r\n    const closeModal = () => { \r\n      settings_modal.value = false;\r\n\t\t\t//@ts-ignore\r\n\t\t\tlocalStorage.setItem('app-settings', JSON.stringify(settings.settings));\r\n      console.log('Configuraciones actualizadas')\r\n    }\r\n\r\n    const changeTheme = () => {\r\n      settings.methods.toggleTheme();\r\n    }\r\n\r\n    return {\r\n      settings,\r\n      fifo, ws, wsclock,\r\n      changeTheme,\r\n      settings_modal,\r\n      openModal,\r\n      closeModal,\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./Home.vue?vue&type=template&id=3b8e4bfa\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=3b8e4bfa&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"fifo\">\r\n        <div class=\"fifo-blur\" :class=\"{ blur: modal_open || settings_modal }\">\r\n            <div class=\"fifo__main\">\r\n                <div class=\"fifo__main__info\">\r\n                    <div class=\"info-panel\">\r\n                        <InfoPanel\r\n                            :current=\"current\"\r\n                            :completed=\"completed\"\r\n                            :pageFaults=\"faults\"\r\n                        />\r\n                    </div>\r\n                    <Table class=\"process-queue\"\r\n                        :title=\"'Procesos'\"\r\n                        :listIterable=\"processQueue\"\r\n                    />\r\n                </div>\r\n                <div class=\"fifo__main__center\">\r\n                    <div class=\"message\" v-if=\"message.length > 0\">{{message}}</div>\r\n                    <Table class=\"fifo-physic-mem\"\r\n                        :title=\"'Memoria fisica'\"\r\n                        :listIterable=\"physicalMemory\"\r\n                        :slots=\"physicalSize\"\r\n                    />\r\n                    <HorizontalTable class=\"fifo-ref-queue\"\r\n                        :listIterable=\"workingSet\"\r\n                        :title=\"'Conjunto de trabajo'\"\r\n                    />\r\n                </div>\r\n                <div class=\"fifo__main__lat\">\r\n                    <Table\r\n                        :listIterable=\"virtualMemory\"\r\n                        :title=\"'Memoria virtual'\"\r\n                        :slots=\"virtualSize\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div class=\"fifo__buttons\">\r\n                <Button\r\n                    :icon=\"'leave'\"\r\n                    :onClickFunction=\"openModal\"\r\n                    :expand=\"true\"\r\n                    :round=\"true\"\r\n                    :size=\"settings.getters.getFontSize() * 1.2\"\r\n                />\r\n                <div class=\"action-btns\">\r\n                    <!-- <Button\r\n                        :onClickFunction=\"nextStep\"\r\n                        :icon=\"'prev'\"\r\n                        :round=\"true\"\r\n                        :expand=\"true\"\r\n                        :size=\"24\"\r\n                    />\r\n                    <Button\r\n                        :onClickFunction=\"nextStep\"\r\n                        :icon=\"'play'\"\r\n                        :round=\"true\"\r\n                        :expand=\"true\"\r\n                        :size=\"24\"\r\n                    /> -->\r\n                    <Button\r\n                        :onClickFunction=\"nextStep\"\r\n                        :icon=\"'next'\"\r\n                        :round=\"true\"\r\n                        :expand=\"true\"\r\n                        :size=\"settings.getters.getFontSize() * 1.2\"\r\n                    />\r\n                </div>\r\n                <Button class=\"btn-sett\"\r\n                    :icon=\"'settings'\"\r\n                    :round=\"true\"\r\n                    :expand=\"true\"\r\n                    :size=\"settings.getters.getFontSize() * 1.2\"\r\n                    :onClickFunction=\"openSettings\"\r\n                />\r\n            </div>\r\n        </div>\r\n        <ConfirmModal \r\n            :showing=\"modal_open\"\r\n            @update:showing=\"modal_open\"\r\n            @close=\"closeModal\"\r\n        >\r\n            ¿Esta seguro que desea salir <br>\r\n            Al salir perdera el estado actual del simulador al igual que al informacion de los procesos de entrada\r\n        </ConfirmModal>\r\n        <Modal\r\n            :showing=\"settings_modal\"\r\n            @update:showing=\"settings_modal\"\r\n            @close=\"closeSettings\"\r\n        >\r\n            <Settings />\r\n        </Modal>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, inject, onMounted, ref } from 'vue';\r\nimport Button from '@/components/Button/Button.vue';\r\nimport InfoPanel from '@/components/InfoPanel/InfoPanel.vue';\r\nimport Table from '@/components/Table/Table.vue';\r\nimport HorizontalTable from '@/components/HorizontalTable/HorizontalTable.vue';\r\nimport ConfirmModal from '@/components/ConfirmModal/ConfirmModal.vue';\r\nimport Modal from '@/components/Modal/Modal.vue'\r\nimport Settings from '@/components/Settings/Settings.vue'\r\n\r\nimport CPU from '@/model/cpu';\r\n\r\nexport default defineComponent({\r\n    components:{\r\n        Button,\r\n        InfoPanel,\r\n        Table,\r\n        HorizontalTable,\r\n        ConfirmModal,\r\n        Modal,\r\n        Settings,\r\n    },\r\n    props: {\r\n        inputArray: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        virtualSize: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        physicalSize: {\r\n            type: Number,\r\n            rquired: true\r\n        },\r\n        opt1: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        },\r\n        opt2: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        },\r\n    },\r\n    setup(props) {\r\n        const settings = inject('settings');\r\n\r\n        const lista: string[] = [];\r\n        const cpu = ref<CPU>();\r\n\r\n        const message = ref<string>('');\r\n\r\n        const modal_open = ref(false);\r\n        const settings_modal = ref(false);\r\n\r\n        const openModal = () => { \r\n            modal_open.value = true;\r\n        }\r\n\r\n        const closeModal = () => { \r\n            modal_open.value = false \r\n        }\r\n\r\n        const openSettings = () => settings_modal.value = true;\r\n        const closeSettings = () => {\r\n            settings_modal.value = false;\r\n            //@ts-ignore\r\n            localStorage.setItem('settings', JSON.stringify(settings.settings));\r\n            console.log('Si se pudo o puro pedo?')\r\n        }\r\n\r\n        const faults = computed(() => {\r\n            if(cpu.value === undefined) return 0;\r\n            if(cpu.value.faults !== null) \r\n                return cpu.value.faults;\r\n            return 0;\r\n        });\r\n\r\n        const current = computed((): string => {\r\n            if(cpu.value === undefined) return ''\r\n            if(cpu.value.computed_process !== null) \r\n                return `${cpu.value.computed_process.PID}-${cpu.value.current_reference}`;\r\n            return ''\r\n        });\r\n\r\n        const completed = computed((): string => {\r\n            if(cpu.value === undefined) return '-/-';\r\n            return `${cpu.value.completed_processes}/${cpu.value.total_processes}`;\r\n        });\r\n\r\n        const processQueue = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.scheduler.job_queue.queue.map(x => `${x.PID}`)\r\n        });\r\n\r\n        const virtualMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.virtual.pages.map((x) => (!x.free ? `${x.page.process_pid}-${x.page.process_page}` : ' '));\r\n        });\r\n\r\n        const physicalMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.physical.frames.map((x) => (!x.free ? `${x.frame.process_pid}-${x.frame.process_page}` : ' '));\r\n        });\r\n\r\n        const workingSet = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.mmu.working_set;\r\n        });\r\n\r\n        const nextStep = () => {\r\n            cpu.value.next();\r\n            const temp = cpu.value.getError();\r\n            if(temp.length > 0){\r\n                message.value = temp;\r\n                setTimeout(() => {\r\n                    message.value = '';\r\n                }, 3000);\r\n            }\r\n        }\r\n\r\n        function initCPU(){\r\n            //@ts-ignore\r\n            cpu.value = new CPU(JSON.parse(props.inputArray), props.physicalSize, props.virtualSize, \r\n            //@ts-ignore\r\n                                settings.getters.getQuantum(), 'Set', props.opt1, props.opt2);\r\n            console.log('___', cpu.value);\r\n            console.log('___', cpu.value);\r\n        }       \r\n         \r\n        onMounted(initCPU);\r\n\r\n        return {\r\n            settings,\r\n            lista,\r\n            cpu,\r\n            message,\r\n            modal_open,\r\n            settings_modal,\r\n            openModal,\r\n            closeModal,\r\n            openSettings,\r\n            closeSettings,\r\n            faults,\r\n            current,\r\n            nextStep,\r\n            completed,\r\n            processQueue,\r\n            virtualMemory,\r\n            physicalMemory,\r\n            workingSet,\r\n        }\r\n    }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './fifo';\r\n</style>","<template>\r\n    <div class=\"horiz-table\">\r\n        <div class=\"horiz-table__title\">{{title}}</div>\r\n        <div class=\"horiz-table__content\">\r\n            <div class=\"table-slot\" v-for=\"(item, index) in listIterable\" :key=\"index\">\r\n                {{item}}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        listIterable: {\r\n            type: Array as () => string[],\r\n            required: true\r\n        },\r\n        title: {\r\n            type: String,\r\n            required: false,\r\n        }\r\n    },\r\n    setup () {\r\n        return {}\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './horizontaltable';\r\n</style>","\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        listIterable: {\r\n            type: Array as () => string[],\r\n            required: true\r\n        },\r\n        title: {\r\n            type: String,\r\n            required: false,\r\n        }\r\n    },\r\n    setup () {\r\n        return {}\r\n    }\r\n})\r\n","import { render } from \"./HorizontalTable.vue?vue&type=template&id=37eb7a64\"\nimport script from \"./HorizontalTable.vue?vue&type=script&lang=ts\"\nexport * from \"./HorizontalTable.vue?vue&type=script&lang=ts\"\n\nimport \"./HorizontalTable.vue?vue&type=style&index=0&id=37eb7a64&lang=scss\"\nscript.render = render\n\nexport default script","\r\nimport { computed, defineComponent, inject, onMounted, ref } from 'vue';\r\nimport Button from '@/components/Button/Button.vue';\r\nimport InfoPanel from '@/components/InfoPanel/InfoPanel.vue';\r\nimport Table from '@/components/Table/Table.vue';\r\nimport HorizontalTable from '@/components/HorizontalTable/HorizontalTable.vue';\r\nimport ConfirmModal from '@/components/ConfirmModal/ConfirmModal.vue';\r\nimport Modal from '@/components/Modal/Modal.vue'\r\nimport Settings from '@/components/Settings/Settings.vue'\r\n\r\nimport CPU from '@/model/cpu';\r\n\r\nexport default defineComponent({\r\n    components:{\r\n        Button,\r\n        InfoPanel,\r\n        Table,\r\n        HorizontalTable,\r\n        ConfirmModal,\r\n        Modal,\r\n        Settings,\r\n    },\r\n    props: {\r\n        inputArray: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        virtualSize: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        physicalSize: {\r\n            type: Number,\r\n            rquired: true\r\n        },\r\n        opt1: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        },\r\n        opt2: {\r\n            type: Number,\r\n            required: false,\r\n            default: 0,\r\n        },\r\n    },\r\n    setup(props) {\r\n        const settings = inject('settings');\r\n\r\n        const lista: string[] = [];\r\n        const cpu = ref<CPU>();\r\n\r\n        const message = ref<string>('');\r\n\r\n        const modal_open = ref(false);\r\n        const settings_modal = ref(false);\r\n\r\n        const openModal = () => { \r\n            modal_open.value = true;\r\n        }\r\n\r\n        const closeModal = () => { \r\n            modal_open.value = false \r\n        }\r\n\r\n        const openSettings = () => settings_modal.value = true;\r\n        const closeSettings = () => {\r\n            settings_modal.value = false;\r\n            //@ts-ignore\r\n            localStorage.setItem('settings', JSON.stringify(settings.settings));\r\n            console.log('Si se pudo o puro pedo?')\r\n        }\r\n\r\n        const faults = computed(() => {\r\n            if(cpu.value === undefined) return 0;\r\n            if(cpu.value.faults !== null) \r\n                return cpu.value.faults;\r\n            return 0;\r\n        });\r\n\r\n        const current = computed((): string => {\r\n            if(cpu.value === undefined) return ''\r\n            if(cpu.value.computed_process !== null) \r\n                return `${cpu.value.computed_process.PID}-${cpu.value.current_reference}`;\r\n            return ''\r\n        });\r\n\r\n        const completed = computed((): string => {\r\n            if(cpu.value === undefined) return '-/-';\r\n            return `${cpu.value.completed_processes}/${cpu.value.total_processes}`;\r\n        });\r\n\r\n        const processQueue = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.scheduler.job_queue.queue.map(x => `${x.PID}`)\r\n        });\r\n\r\n        const virtualMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.virtual.pages.map((x) => (!x.free ? `${x.page.process_pid}-${x.page.process_page}` : ' '));\r\n        });\r\n\r\n        const physicalMemory = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.physical.frames.map((x) => (!x.free ? `${x.frame.process_pid}-${x.frame.process_page}` : ' '));\r\n        });\r\n\r\n        const workingSet = computed((): string[] => {\r\n            if(cpu.value === undefined) return [];\r\n            return cpu.value.mmu.working_set;\r\n        });\r\n\r\n        const nextStep = () => {\r\n            cpu.value.next();\r\n            const temp = cpu.value.getError();\r\n            if(temp.length > 0){\r\n                message.value = temp;\r\n                setTimeout(() => {\r\n                    message.value = '';\r\n                }, 3000);\r\n            }\r\n        }\r\n\r\n        function initCPU(){\r\n            //@ts-ignore\r\n            cpu.value = new CPU(JSON.parse(props.inputArray), props.physicalSize, props.virtualSize, \r\n            //@ts-ignore\r\n                                settings.getters.getQuantum(), 'Set', props.opt1, props.opt2);\r\n            console.log('___', cpu.value);\r\n            console.log('___', cpu.value);\r\n        }       \r\n         \r\n        onMounted(initCPU);\r\n\r\n        return {\r\n            settings,\r\n            lista,\r\n            cpu,\r\n            message,\r\n            modal_open,\r\n            settings_modal,\r\n            openModal,\r\n            closeModal,\r\n            openSettings,\r\n            closeSettings,\r\n            faults,\r\n            current,\r\n            nextStep,\r\n            completed,\r\n            processQueue,\r\n            virtualMemory,\r\n            physicalMemory,\r\n            workingSet,\r\n        }\r\n    }\r\n});\r\n","import { render } from \"./Set.vue?vue&type=template&id=3fcbd24a\"\nimport script from \"./Set.vue?vue&type=script&lang=ts\"\nexport * from \"./Set.vue?vue&type=script&lang=ts\"\n\nimport \"./Set.vue?vue&type=style&index=0&id=3fcbd24a&lang=scss\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router'\r\n// import ProcessForm from '@/views/ProcessForm.vue';\r\nimport Form from '@/views/Form.vue';\r\nimport Fifo from '@/views/Fifo.vue';\r\nimport Test from '@/views/Test.vue';\r\nimport Clock from '@/views/Clock.vue';\r\nimport Home from '@/views/Home.vue'\r\nimport Set from '@/views/Set.vue';\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: Home,\r\n  },\r\n  {\r\n    path: '/form',\r\n    name: 'Form',\r\n    component: Form,\r\n    props: true,\r\n    beforeEnter: (t, f, n) => {\r\n      if(t.params.algorithm) n();\r\n      else n({name: 'Home'})\r\n    },\r\n  },\r\n  // {\r\n  //   path: '/form-fifo',\r\n  //   name: 'FormFifo',\r\n  //   component: FormFifo,\r\n  // },\r\n  {\r\n    path: '/fifo',\r\n    name: 'Fifo',\r\n    component: Fifo, \r\n    props: true,\r\n  },\r\n  {\r\n    path: '/set',\r\n    name: 'Set',\r\n    component: Set, \r\n    props: true,\r\n  },\r\n  {\r\n    path: '/wsclock',\r\n    name: 'Clock',\r\n    component: Clock,\r\n    props: true,\r\n  },\r\n  {\r\n    path: '/test',\r\n    name: 'Test',\r\n    component: Test,\r\n  },\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHashHistory(),\r\n  routes\r\n})\r\n\r\nexport default router\r\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\ncreateApp(App).use(router).mount('#app')\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Set.vue?vue&type=style&index=0&id=3fcbd24a&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Toggle.vue?vue&type=style&index=0&id=5057d4ef&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Dropdown.vue?vue&type=style&index=0&id=6593ecb7&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ConfirmModal.vue?vue&type=style&index=0&id=887e23ea&lang=scss\""],"sourceRoot":""}